/**
 * @fileoverview added by tsickle
 * Generated from: nz-icon-test.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { NgModule } from '@angular/core';
import * as AllIcons from '@ant-design/icons-angular/icons';
import { NZ_ICONS, NzIconModule } from 'ng-zorro-antd/icon';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
const antDesignIcons = (/** @type {?} */ (AllIcons));
const ɵ0 = /**
 * @param {?} key
 * @return {?}
 */
key => {
    /** @type {?} */
    const i = antDesignIcons[key];
    return i;
};
/** @type {?} */
const icons = Object.keys(antDesignIcons).map((ɵ0));
const ɵ1 = icons;
/**
 * Include this module in every testing spec, except `icon.spec.ts`.
 */
// @dynamic
export class NzIconTestModule {
}
NzIconTestModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NzIconTestModule });
NzIconTestModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NzIconTestModule_Factory(t) { return new (t || NzIconTestModule)(); }, providers: [
        {
            provide: NZ_ICONS,
            useValue: ɵ1
        }
    ], imports: [NzIconModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzIconTestModule, { exports: function () { return [NzIconModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzIconTestModule, [{
        type: NgModule,
        args: [{
                exports: [NzIconModule],
                providers: [
                    {
                        provide: NZ_ICONS,
                        useValue: ɵ1
                    }
                ]
            }]
    }], null, null); })();
export { ɵ0, ɵ1 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotaWNvbi10ZXN0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L25nLXpvcnJvLWFudGQvaWNvbi90ZXN0aW5nL256LWljb24tdGVzdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBS0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEtBQUssUUFBUSxNQUFNLGlDQUFpQyxDQUFDO0FBRTVELE9BQU8sRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDNUQ7O0FBQ2dCLE1BQVYsY0FBYyxHQUFHLG1CQUFBLFFBQVEsRUFFOUI7QUFDRDtBQUNjO0FBQWtCO0FBQWU7QUFBaUIsR0FBRyxDQUFDLEVBQUU7QUFDdEU7QUFBcUIsVUFBYixDQUFDLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQztBQUMvQixJQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQUFFO0FBR1EsTUFOTCxLQUFLLEdBQXFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBRyxNQUc3RDtBQUNGLFdBVWdCLEtBQUs7QUFDcEI7QUFBSTtBQUl1QjtBQUFJO0FBRGhDLE1BQU0sT0FBTyxnQkFBZ0I7QUFBRzs0Q0FUL0IsUUFBUSxTQUFDO0VBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLGtCQUN2QixTQUFTLEVBQUUsc0JBQ1QsMEJBQ0UsT0FBTyxFQUFFLFFBQVEsMEJBQ2pCO0NBQVEsSUFBTztpQkFDaEI7SUFDRixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQztBQUFtQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uRGVmaW5pdGlvbiB9IGZyb20gJ0BhbnQtZGVzaWduL2ljb25zLWFuZ3VsYXInO1xuaW1wb3J0ICogYXMgQWxsSWNvbnMgZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMtYW5ndWxhci9pY29ucyc7XG5cbmltcG9ydCB7IE5aX0lDT05TLCBOekljb25Nb2R1bGUgfSBmcm9tICduZy16b3Jyby1hbnRkL2ljb24nO1xuXG5jb25zdCBhbnREZXNpZ25JY29ucyA9IEFsbEljb25zIGFzIHtcbiAgW2tleTogc3RyaW5nXTogSWNvbkRlZmluaXRpb247XG59O1xuXG5jb25zdCBpY29uczogSWNvbkRlZmluaXRpb25bXSA9IE9iamVjdC5rZXlzKGFudERlc2lnbkljb25zKS5tYXAoa2V5ID0+IHtcbiAgY29uc3QgaSA9IGFudERlc2lnbkljb25zW2tleV07XG4gIHJldHVybiBpO1xufSk7XG5cbi8qKlxuICogSW5jbHVkZSB0aGlzIG1vZHVsZSBpbiBldmVyeSB0ZXN0aW5nIHNwZWMsIGV4Y2VwdCBgaWNvbi5zcGVjLnRzYC5cbiAqL1xuLy8gQGR5bmFtaWNcbkBOZ01vZHVsZSh7XG4gIGV4cG9ydHM6IFtOekljb25Nb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOWl9JQ09OUyxcbiAgICAgIHVzZVZhbHVlOiBpY29uc1xuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOekljb25UZXN0TW9kdWxlIHt9XG4iXX0=