/**
 * @fileoverview added by tsickle
 * Generated from: src/table/tr-expand.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directive, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class NzTrExpandDirective {
    constructor() {
        this.nzExpand = true;
    }
}
NzTrExpandDirective.ɵfac = function NzTrExpandDirective_Factory(t) { return new (t || NzTrExpandDirective)(); };
NzTrExpandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzTrExpandDirective, selectors: [["tr", "nzExpand", ""]], hostVars: 3, hostBindings: function NzTrExpandDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("hidden", !ctx.nzExpand);
        ɵngcc0.ɵɵclassProp("ant-table-expanded-row", true);
    } }, inputs: { nzExpand: "nzExpand" } });
NzTrExpandDirective.propDecorators = {
    nzExpand: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzTrExpandDirective, [{
        type: Directive,
        args: [{
                selector: 'tr[nzExpand]',
                host: {
                    '[class.ant-table-expanded-row]': 'true',
                    '[hidden]': `!nzExpand`
                }
            }]
    }], function () { return []; }, { nzExpand: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    NzTrExpandDirective.prototype.nzExpand;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHItZXhwYW5kLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsibmc6L25nLXpvcnJvLWFudGQvdGFibGUvc3JjL3RhYmxlL3RyLWV4cGFuZC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBS0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBU2pELE1BQU0sT0FBTyxtQkFBbUI7QUFDaEMsSUFSQTtBQUNHLFFBT1EsYUFBUSxHQUFHLElBQUksQ0FBQztBQUMzQixJQUFBLENBQUM7QUFDRDsrQ0FWQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGNBQWM7WUFDeEIsSUFBSSxFQUFFLHNCQUNKLGdDQUFnQyxFQUFFLE1BQU0sc0JBQ3hDLFVBQVUsRUFBRSxXQUFXLGtCQUN4QixjQUNGOzs7NkNBQ0k7QUFBQztBQUNJLHVCQUFQLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUM7QUFDZjtBQUNtQixJQUZqQix1Q0FBeUI7QUFDM0I7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAndHJbbnpFeHBhbmRdJyxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuYW50LXRhYmxlLWV4cGFuZGVkLXJvd10nOiAndHJ1ZScsXG4gICAgJ1toaWRkZW5dJzogYCFuekV4cGFuZGBcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOelRyRXhwYW5kRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgbnpFeHBhbmQgPSB0cnVlO1xufVxuIl19