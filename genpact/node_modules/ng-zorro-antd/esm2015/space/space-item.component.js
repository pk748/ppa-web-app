/**
 * @fileoverview added by tsickle
 * Generated from: space-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, ElementRef, Renderer2 } from '@angular/core';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
const spaceSize = {
    small: 8,
    middle: 16,
    large: 24
};
export class NzSpaceItemComponent {
    /**
     * @param {?} renderer
     * @param {?} elementRef
     */
    constructor(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
    }
    /**
     * @param {?} direction
     * @param {?} size
     * @return {?}
     */
    setDirectionAndSize(direction, size) {
        /** @type {?} */
        const marginSize = typeof size === 'string' ? spaceSize[size] : size;
        if (direction === 'horizontal') {
            this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-bottom');
            this.renderer.setStyle(this.elementRef.nativeElement, 'margin-right', `${marginSize}px`);
        }
        else {
            this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-right');
            this.renderer.setStyle(this.elementRef.nativeElement, 'margin-bottom', `${marginSize}px`);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
}
NzSpaceItemComponent.ɵfac = function NzSpaceItemComponent_Factory(t) { return new (t || NzSpaceItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NzSpaceItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzSpaceItemComponent, selectors: [["nz-space-item"], ["", "nz-space-item", ""]], hostAttrs: [1, "ant-space-item"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzSpaceItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
NzSpaceItemComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzSpaceItemComponent, [{
        type: Component,
        args: [{
                selector: 'nz-space-item, [nz-space-item]',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: ` <ng-content></ng-content> `,
                host: {
                    class: 'ant-space-item'
                }
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();
if (false) {
    /**
     * @type {?}
     * @private
     */
    NzSpaceItemComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    NzSpaceItemComponent.prototype.elementRef;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhY2UtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9uZy16b3Jyby1hbnRkL3NwYWNlL3NwYWNlLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFVLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRzs7OztBQUNnQixNQUVWLFNBQVMsR0FBRztBQUNsQixJQUFFLEtBQUssRUFBRSxDQUFDO0FBQ1YsSUFBRSxNQUFNLEVBQUUsRUFBRTtBQUNaLElBQUUsS0FBSyxFQUFFLEVBQUU7QUFDWCxDQUFDO0FBVUQsTUFBTSxPQUFPLG9CQUFvQjtBQUFHO0FBQVE7QUFDM0I7QUFBNkI7QUFBUSxJQUFwRCxZQUFvQixRQUFtQixFQUFVLFVBQXNCO0FBQUksUUFBdkQsYUFBUSxHQUFSLFFBQVEsQ0FBVztBQUFDLFFBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBWTtBQUFDLElBQUUsQ0FBQztBQUM3RTtBQUNPO0FBQTRCO0FBQXVCO0FBQW1CO0FBQVEsSUFBbkYsbUJBQW1CLENBQUMsU0FBMkIsRUFBRSxJQUEwQjtBQUFJO0FBQzlELGNBQVQsVUFBVSxHQUFHLE9BQU8sSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJO0FBQ3hFLFFBQUksSUFBSSxTQUFTLEtBQUssWUFBWSxFQUFFO0FBQ3BDLFlBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDaEYsWUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxjQUFjLEVBQUUsR0FBRyxVQUFVLElBQUksQ0FBQyxDQUFDO0FBQy9GLFNBQUs7QUFBQyxhQUFLO0FBQ1gsWUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxjQUFjLENBQUMsQ0FBQztBQUMvRSxZQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLGVBQWUsRUFBRSxHQUFHLFVBQVUsSUFBSSxDQUFDLENBQUM7QUFDaEcsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNIO0FBQ087QUFFTDtBQUFRLElBRlIsUUFBUSxLQUFVLENBQUM7QUFDckI7Z0RBdkJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZ0NBQWdDLGtCQUMxQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtNQUMvQyxRQUFRLEVBQUUsNkJBQTZCLGtCQUN2QyxJQUFJLEVBQUUsc0JBQ0osS0FBSyxFQUFFLGdCQUFnQixrQkFDeEIsY0FDRjs7O2lEQUNHO0FBQUM7QUFBbUI7QUFDUixZQW5CaUQsU0FBUztBQUFJLFlBQWpDLFVBQVU7QUFBRzs7Ozs7Ozs7Ozs7dUdBQUU7QUFBQztBQUFhO0FBQVE7QUFDbEY7QUFDZTtBQUFRLElBaUJULHdDQUEyQjtBQUFDO0FBQVE7QUFBaUI7QUFFL0Q7QUFBUSxJQUYrQiwwQ0FBOEI7QUFBQztBQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgT25Jbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTnpTcGFjZURpcmVjdGlvbiwgTnpTcGFjZVNpemUgfSBmcm9tICcuL3R5cGVzJztcblxuY29uc3Qgc3BhY2VTaXplID0ge1xuICBzbWFsbDogOCxcbiAgbWlkZGxlOiAxNixcbiAgbGFyZ2U6IDI0XG59O1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduei1zcGFjZS1pdGVtLCBbbnotc3BhY2UtaXRlbV0nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6IGAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PiBgLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdhbnQtc3BhY2UtaXRlbSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOelNwYWNlSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIHNldERpcmVjdGlvbkFuZFNpemUoZGlyZWN0aW9uOiBOelNwYWNlRGlyZWN0aW9uLCBzaXplOiBudW1iZXIgfCBOelNwYWNlU2l6ZSk6IHZvaWQge1xuICAgIGNvbnN0IG1hcmdpblNpemUgPSB0eXBlb2Ygc2l6ZSA9PT0gJ3N0cmluZycgPyBzcGFjZVNpemVbc2l6ZV0gOiBzaXplO1xuICAgIGlmIChkaXJlY3Rpb24gPT09ICdob3Jpem9udGFsJykge1xuICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVTdHlsZSh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ21hcmdpbi1ib3R0b20nKTtcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdtYXJnaW4tcmlnaHQnLCBgJHttYXJnaW5TaXplfXB4YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlU3R5bGUodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdtYXJnaW4tcmlnaHQnKTtcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdtYXJnaW4tYm90dG9tJywgYCR7bWFyZ2luU2l6ZX1weGApO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge31cbn1cbiJdfQ==