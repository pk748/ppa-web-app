/**
 * @fileoverview added by tsickle
 * Generated from: card-loading.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function NzCardLoadingComponent_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelement(1, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const className_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", className_r3);
} }
function NzCardLoadingComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, NzCardLoadingComponent_div_1_div_1_Template, 2, 1, "div", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const listOfClassName_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", listOfClassName_r1);
} }
export class NzCardLoadingComponent {
    constructor() {
        this.listOfLoading = [
            ['ant-col-22'],
            ['ant-col-8', 'ant-col-15'],
            ['ant-col-6', 'ant-col-18'],
            ['ant-col-13', 'ant-col-9'],
            ['ant-col-4', 'ant-col-3', 'ant-col-16'],
            ['ant-col-8', 'ant-col-6', 'ant-col-8']
        ];
    }
}
NzCardLoadingComponent.ɵfac = function NzCardLoadingComponent_Factory(t) { return new (t || NzCardLoadingComponent)(); };
NzCardLoadingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzCardLoadingComponent, selectors: [["nz-card-loading"]], hostVars: 2, hostBindings: function NzCardLoadingComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ant-card-loading-content", true);
    } }, exportAs: ["nzCardLoading"], decls: 2, vars: 1, consts: [[1, "ant-card-loading-content"], ["class", "ant-row", "style", "margin-left: -4px; margin-right: -4px;", 4, "ngFor", "ngForOf"], [1, "ant-row", 2, "margin-left", "-4px", "margin-right", "-4px"], ["style", "padding-left: 4px; padding-right: 4px;", 3, "ngClass", 4, "ngFor", "ngForOf"], [2, "padding-left", "4px", "padding-right", "4px", 3, "ngClass"], [1, "ant-card-loading-block"]], template: function NzCardLoadingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, NzCardLoadingComponent_div_1_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.listOfLoading);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
NzCardLoadingComponent.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCardLoadingComponent, [{
        type: Component,
        args: [{
                selector: 'nz-card-loading',
                exportAs: 'nzCardLoading',
                template: `
    <div class="ant-card-loading-content">
      <div class="ant-row" style="margin-left: -4px; margin-right: -4px;" *ngFor="let listOfClassName of listOfLoading">
        <div *ngFor="let className of listOfClassName" [ngClass]="className" style="padding-left: 4px; padding-right: 4px;">
          <div class="ant-card-loading-block"></div>
        </div>
      </div>
    </div>
  `,
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: {
                    '[class.ant-card-loading-content]': 'true'
                }
            }]
    }], function () { return []; }, null); })();
if (false) {
    /** @type {?} */
    NzCardLoadingComponent.prototype.listOfLoading;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1sb2FkaW5nLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L25nLXpvcnJvLWFudGQvY2FyZC9jYXJkLWxvYWRpbmcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCdEYsTUFBTSxPQUFPLHNCQUFzQjtBQUNuQyxJQVFFO0FBQWdCLFFBUmhCLGtCQUFhLEdBQWU7QUFDOUIsWUFBSSxDQUFDLFlBQVksQ0FBQztBQUNsQixZQUFJLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQztBQUMvQixZQUFJLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQztBQUMvQixZQUFJLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQztBQUMvQixZQUFJLENBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRSxZQUFZLENBQUM7QUFDNUMsWUFBSSxDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDO0FBQzNDLFNBQUcsQ0FBQztBQUNKLElBQWlCLENBQUM7QUFDbEI7a0RBN0JDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsaUJBQWlCO1NBQzNCLFFBQVEsRUFBRSxlQUFlLGtCQUN6QixRQUFRLEVBQUU7O3dLQVFULGtCQUNELG1CQUFtQixFQUFFLEtBQUssa0JBQzFCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGtCQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxrQkFDckMsSUFBSSxFQUFFLHNCQUNKLGtDQUFrQyxFQUFFLE1BQU0sa0JBQzNDLGNBQ0Y7Ozs7Ozs7K0ZBQ0c7QUFBQztBQUFtQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFFckI7QUFBQztBQUFhO0FBQ0MsSUFGaEIsK0NBT0U7QUFDSjtBQUFFIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbnotY2FyZC1sb2FkaW5nJyxcbiAgZXhwb3J0QXM6ICduekNhcmRMb2FkaW5nJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiYW50LWNhcmQtbG9hZGluZy1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYW50LXJvd1wiIHN0eWxlPVwibWFyZ2luLWxlZnQ6IC00cHg7IG1hcmdpbi1yaWdodDogLTRweDtcIiAqbmdGb3I9XCJsZXQgbGlzdE9mQ2xhc3NOYW1lIG9mIGxpc3RPZkxvYWRpbmdcIj5cbiAgICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgY2xhc3NOYW1lIG9mIGxpc3RPZkNsYXNzTmFtZVwiIFtuZ0NsYXNzXT1cImNsYXNzTmFtZVwiIHN0eWxlPVwicGFkZGluZy1sZWZ0OiA0cHg7IHBhZGRpbmctcmlnaHQ6IDRweDtcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYW50LWNhcmQtbG9hZGluZy1ibG9ja1wiPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmFudC1jYXJkLWxvYWRpbmctY29udGVudF0nOiAndHJ1ZSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOekNhcmRMb2FkaW5nQ29tcG9uZW50IHtcbiAgbGlzdE9mTG9hZGluZzogc3RyaW5nW11bXSA9IFtcbiAgICBbJ2FudC1jb2wtMjInXSxcbiAgICBbJ2FudC1jb2wtOCcsICdhbnQtY29sLTE1J10sXG4gICAgWydhbnQtY29sLTYnLCAnYW50LWNvbC0xOCddLFxuICAgIFsnYW50LWNvbC0xMycsICdhbnQtY29sLTknXSxcbiAgICBbJ2FudC1jb2wtNCcsICdhbnQtY29sLTMnLCAnYW50LWNvbC0xNiddLFxuICAgIFsnYW50LWNvbC04JywgJ2FudC1jb2wtNicsICdhbnQtY29sLTgnXVxuICBdO1xuICBjb25zdHJ1Y3RvcigpIHt9XG59XG4iXX0=