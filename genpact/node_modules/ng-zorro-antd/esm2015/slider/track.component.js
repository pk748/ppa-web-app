/**
 * @fileoverview added by tsickle
 * Generated from: track.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __decorate, __metadata } from "tslib";
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export function NzSliderTrackStyle() { }
if (false) {
    /** @type {?|undefined} */
    NzSliderTrackStyle.prototype.bottom;
    /** @type {?|undefined} */
    NzSliderTrackStyle.prototype.height;
    /** @type {?|undefined} */
    NzSliderTrackStyle.prototype.left;
    /** @type {?|undefined} */
    NzSliderTrackStyle.prototype.width;
    /** @type {?|undefined} */
    NzSliderTrackStyle.prototype.visibility;
}
export class NzSliderTrackComponent {
    constructor() {
        this.offset = 0;
        this.reverse = false;
        this.length = 0;
        this.vertical = false;
        this.included = false;
        this.style = {};
    }
    /**
     * @return {?}
     */
    ngOnChanges() {
        /** @type {?} */
        const vertical = this.vertical;
        /** @type {?} */
        const reverse = this.reverse;
        /** @type {?} */
        const visibility = this.included ? 'visible' : 'hidden';
        /** @type {?} */
        const offset = this.offset;
        /** @type {?} */
        const length = this.length;
        /** @type {?} */
        const positonStyle = vertical
            ? {
                [reverse ? 'top' : 'bottom']: `${offset}%`,
                [reverse ? 'bottom' : 'top']: 'auto',
                height: `${length}%`,
                visibility
            }
            : {
                [reverse ? 'right' : 'left']: `${offset}%`,
                [reverse ? 'left' : 'right']: 'auto',
                width: `${length}%`,
                visibility
            };
        this.style = positonStyle;
    }
}
NzSliderTrackComponent.ɵfac = function NzSliderTrackComponent_Factory(t) { return new (t || NzSliderTrackComponent)(); };
NzSliderTrackComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzSliderTrackComponent, selectors: [["nz-slider-track"]], inputs: { offset: "offset", reverse: "reverse", length: "length", vertical: "vertical", included: "included" }, exportAs: ["nzSliderTrack"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[1, "ant-slider-track", 3, "ngStyle"]], template: function NzSliderTrackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ctx.style);
    } }, directives: [ɵngcc1.NgStyle], encapsulation: 2, changeDetection: 0 });
NzSliderTrackComponent.propDecorators = {
    offset: [{ type: Input }],
    reverse: [{ type: Input }],
    length: [{ type: Input }],
    vertical: [{ type: Input }],
    included: [{ type: Input }]
};
__decorate([
    InputNumber(),
    __metadata("design:type", Number)
], NzSliderTrackComponent.prototype, "offset", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Boolean)
], NzSliderTrackComponent.prototype, "reverse", void 0);
__decorate([
    InputNumber(),
    __metadata("design:type", Number)
], NzSliderTrackComponent.prototype, "length", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Object)
], NzSliderTrackComponent.prototype, "vertical", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Object)
], NzSliderTrackComponent.prototype, "included", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzSliderTrackComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                selector: 'nz-slider-track',
                exportAs: 'nzSliderTrack',
                preserveWhitespaces: false,
                template: ` <div class="ant-slider-track" [ngStyle]="style"></div> `
            }]
    }], function () { return []; }, { offset: [{
            type: Input
        }], reverse: [{
            type: Input
        }], length: [{
            type: Input
        }], vertical: [{
            type: Input
        }], included: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    NzSliderTrackComponent.ngAcceptInputType_offset;
    /** @type {?} */
    NzSliderTrackComponent.ngAcceptInputType_length;
    /** @type {?} */
    NzSliderTrackComponent.ngAcceptInputType_vertical;
    /** @type {?} */
    NzSliderTrackComponent.ngAcceptInputType_included;
    /** @type {?} */
    NzSliderTrackComponent.ngAcceptInputType_reverse;
    /** @type {?} */
    NzSliderTrackComponent.prototype.offset;
    /** @type {?} */
    NzSliderTrackComponent.prototype.reverse;
    /** @type {?} */
    NzSliderTrackComponent.prototype.length;
    /** @type {?} */
    NzSliderTrackComponent.prototype.vertical;
    /** @type {?} */
    NzSliderTrackComponent.prototype.included;
    /** @type {?} */
    NzSliderTrackComponent.prototype.style;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2suY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovbmctem9ycm8tYW50ZC9zbGlkZXIvdHJhY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBYSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV4RyxPQUFPLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BFO0FBQ0c7QUFBVzs7O0FBQWQsd0NBTUM7QUFDRDtBQUNZO0FBQ2tCLElBUjVCLG9DQUF1QjtBQUN6QjtBQUNLLElBREgsb0NBQXVCO0FBQ3pCO0FBQ08sSUFETCxrQ0FBcUI7QUFDdkI7QUFDTSxJQURKLG1DQUFzQjtBQUN4QjtBQUdLLElBSEgsd0NBQW9CO0FBQ3RCO0FBVUEsTUFBTSxPQUFPLHNCQUFzQjtBQUFHLElBUnRDO0FBQ0csUUFjdUIsV0FBTSxHQUFXLENBQUMsQ0FBQztBQUM3QyxRQUEyQixZQUFPLEdBQVksS0FBSyxDQUFDO0FBQ3BELFFBQTBCLFdBQU0sR0FBVyxDQUFDLENBQUM7QUFDN0MsUUFBMkIsYUFBUSxHQUFHLEtBQUssQ0FBQztBQUM1QyxRQUEyQixhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQzVDLFFBQ0UsVUFBSyxHQUF1QixFQUFFLENBQUM7QUFDakMsSUF3QkEsQ0FBQztBQUNEO0FBQVE7QUFBbUI7QUFBUSxJQXhCakMsV0FBVztBQUFLO0FBQ0MsY0FBVCxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVE7QUFDbEM7QUFBeUIsY0FBZixPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU87QUFDaEM7QUFBeUIsY0FBZixVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxRQUFRO0FBQzNEO0FBQXlCLGNBQWYsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNO0FBQzlCO0FBQXlCLGNBQWYsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNO0FBQzlCO0FBQ3dCLGNBQWQsWUFBWSxHQUF1QixRQUFRO0FBQ3JELFlBQU0sQ0FBQyxDQUFDO0FBQ1IsZ0JBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxNQUFNLEdBQUc7QUFDcEQsZ0JBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsTUFBTTtBQUM5QyxnQkFBVSxNQUFNLEVBQUUsR0FBRyxNQUFNLEdBQUc7QUFDOUIsZ0JBQVUsVUFBVTtBQUNwQixhQUFTO0FBQ1QsWUFBTSxDQUFDLENBQUM7QUFDUixnQkFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLE1BQU0sR0FBRztBQUNwRCxnQkFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFNO0FBQzlDLGdCQUFVLEtBQUssRUFBRSxHQUFHLE1BQU0sR0FBRztBQUM3QixnQkFBVSxVQUFVO0FBQ3BCLGFBQVM7QUFDVCxRQUNJLElBQUksQ0FBQyxLQUFLLEdBQUcsWUFBWSxDQUFDO0FBQzlCLElBQUUsQ0FBQztBQUNIO2tEQTlDQyxTQUFTLFNBQUMsa0JBQ1QsZUFBZSxFQUFFO0lBQXVCLENBQUMsTUFBTSxrQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksa0JBQ3JDLFFBQVEsRUFBRSxpQkFBaUIsa0JBQzNCLFFBQVEsRUFBRSxlQUFlLGtCQUN6QixtQkFBbUIsRUFBRSxLQUFLLGtCQUMxQixRQUFRLEVBQUUsMERBQTBELGNBQ3JFOzs7OytFQUNHO0FBQUM7QUFBMEMscUJBTzVDLEtBQUs7QUFBSyxzQkFDVixLQUFLO0FBQUsscUJBQ1YsS0FBSztBQUFLLHVCQUNWLEtBQUs7QUFBSyx1QkFDVixLQUFLO0FBQUk7QUFKYztBQUFhLElBQTNCLFdBQVcsRUFBRTtBQUFFO0FBQ1Isc0RBRDBCO0FBQ2xCO0FBQWEsSUFBNUIsWUFBWSxFQUFFO0FBQUU7QUFDZCx1REFEc0M7QUFDMUI7QUFBYSxJQUEzQixXQUFXLEVBQUU7QUFBRTtBQUNSLHNEQUQwQjtBQUNsQjtBQUFhLElBQTVCLFlBQVksRUFBRTtBQUFFO0FBQ1Asd0RBRHVCO0FBQ2pCO0FBQWEsSUFBNUIsWUFBWSxFQUFFO0FBQUU7QUFFUix3REFGd0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFDNUM7QUFDQTtBQUFhO0FBQ2IsSUFiRSxnREFBNkM7QUFDL0M7QUFBcUIsSUFBbkIsZ0RBQTZDO0FBQy9DO0FBQXFCLElBQW5CLGtEQUFnRDtBQUNsRDtBQUFxQixJQUFuQixrREFBZ0Q7QUFDbEQ7QUFBcUIsSUFBbkIsaURBQStDO0FBQ2pEO0FBQ29CLElBQWxCLHdDQUEyQztBQUM3QztBQUFxQixJQUFuQix5Q0FBa0Q7QUFDcEQ7QUFBcUIsSUFBbkIsd0NBQTJDO0FBQzdDO0FBQXFCLElBQW5CLDBDQUEwQztBQUM1QztBQUFxQixJQUFuQiwwQ0FBMEM7QUFDNUM7QUFDb0IsSUFBbEIsdUNBQStCO0FBQ2pDO0FBQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0LCBOdW1iZXJJbnB1dCB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBJbnB1dEJvb2xlYW4sIElucHV0TnVtYmVyIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3V0aWwnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE56U2xpZGVyVHJhY2tTdHlsZSB7XG4gIGJvdHRvbT86IHN0cmluZyB8IG51bGw7XG4gIGhlaWdodD86IHN0cmluZyB8IG51bGw7XG4gIGxlZnQ/OiBzdHJpbmcgfCBudWxsO1xuICB3aWR0aD86IHN0cmluZyB8IG51bGw7XG4gIHZpc2liaWxpdHk/OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgc2VsZWN0b3I6ICduei1zbGlkZXItdHJhY2snLFxuICBleHBvcnRBczogJ256U2xpZGVyVHJhY2snLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgdGVtcGxhdGU6IGAgPGRpdiBjbGFzcz1cImFudC1zbGlkZXItdHJhY2tcIiBbbmdTdHlsZV09XCJzdHlsZVwiPjwvZGl2PiBgXG59KVxuZXhwb3J0IGNsYXNzIE56U2xpZGVyVHJhY2tDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfb2Zmc2V0OiBOdW1iZXJJbnB1dDtcbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX2xlbmd0aDogTnVtYmVySW5wdXQ7XG4gIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV92ZXJ0aWNhbDogQm9vbGVhbklucHV0O1xuICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfaW5jbHVkZWQ6IEJvb2xlYW5JbnB1dDtcbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX3JldmVyc2U6IEJvb2xlYW5JbnB1dDtcblxuICBASW5wdXQoKSBASW5wdXROdW1iZXIoKSBvZmZzZXQ6IG51bWJlciA9IDA7XG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSByZXZlcnNlOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIEBJbnB1dE51bWJlcigpIGxlbmd0aDogbnVtYmVyID0gMDtcbiAgQElucHV0KCkgQElucHV0Qm9vbGVhbigpIHZlcnRpY2FsID0gZmFsc2U7XG4gIEBJbnB1dCgpIEBJbnB1dEJvb2xlYW4oKSBpbmNsdWRlZCA9IGZhbHNlO1xuXG4gIHN0eWxlOiBOelNsaWRlclRyYWNrU3R5bGUgPSB7fTtcblxuICBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICBjb25zdCB2ZXJ0aWNhbCA9IHRoaXMudmVydGljYWw7XG4gICAgY29uc3QgcmV2ZXJzZSA9IHRoaXMucmV2ZXJzZTtcbiAgICBjb25zdCB2aXNpYmlsaXR5ID0gdGhpcy5pbmNsdWRlZCA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nO1xuICAgIGNvbnN0IG9mZnNldCA9IHRoaXMub2Zmc2V0O1xuICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMubGVuZ3RoO1xuXG4gICAgY29uc3QgcG9zaXRvblN0eWxlOiBOelNsaWRlclRyYWNrU3R5bGUgPSB2ZXJ0aWNhbFxuICAgICAgPyB7XG4gICAgICAgICAgW3JldmVyc2UgPyAndG9wJyA6ICdib3R0b20nXTogYCR7b2Zmc2V0fSVgLFxuICAgICAgICAgIFtyZXZlcnNlID8gJ2JvdHRvbScgOiAndG9wJ106ICdhdXRvJyxcbiAgICAgICAgICBoZWlnaHQ6IGAke2xlbmd0aH0lYCxcbiAgICAgICAgICB2aXNpYmlsaXR5XG4gICAgICAgIH1cbiAgICAgIDoge1xuICAgICAgICAgIFtyZXZlcnNlID8gJ3JpZ2h0JyA6ICdsZWZ0J106IGAke29mZnNldH0lYCxcbiAgICAgICAgICBbcmV2ZXJzZSA/ICdsZWZ0JyA6ICdyaWdodCddOiAnYXV0bycsXG4gICAgICAgICAgd2lkdGg6IGAke2xlbmd0aH0lYCxcbiAgICAgICAgICB2aXNpYmlsaXR5XG4gICAgICAgIH07XG5cbiAgICB0aGlzLnN0eWxlID0gcG9zaXRvblN0eWxlO1xuICB9XG59XG4iXX0=