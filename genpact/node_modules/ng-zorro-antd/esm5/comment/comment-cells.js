/**
 * @fileoverview added by tsickle
 * Generated from: comment-cells.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';
import { ChangeDetectionStrategy, Component, ComponentFactoryResolver, Directive, Input, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

function NzCommentActionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
var _c0 = ["*"];
var NzCommentAvatarDirective = /** @class */ (function () {
    function NzCommentAvatarDirective() {
    }
NzCommentAvatarDirective.ɵfac = function NzCommentAvatarDirective_Factory(t) { return new (t || NzCommentAvatarDirective)(); };
NzCommentAvatarDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzCommentAvatarDirective, selectors: [["nz-avatar", "nz-comment-avatar", ""]], exportAs: ["nzCommentAvatar"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCommentAvatarDirective, [{
        type: Directive,
        args: [{
                selector: 'nz-avatar[nz-comment-avatar]',
                exportAs: 'nzCommentAvatar'
            }]
    }], function () { return []; }, null); })();
    return NzCommentAvatarDirective;
}());
export { NzCommentAvatarDirective };
var NzCommentContentDirective = /** @class */ (function () {
    function NzCommentContentDirective() {
    }
NzCommentContentDirective.ɵfac = function NzCommentContentDirective_Factory(t) { return new (t || NzCommentContentDirective)(); };
NzCommentContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzCommentContentDirective, selectors: [["nz-comment-content"], ["", "nz-comment-content", ""]], hostAttrs: [1, "ant-comment-content-detail"], exportAs: ["nzCommentContent"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCommentContentDirective, [{
        type: Directive,
        args: [{
                selector: 'nz-comment-content, [nz-comment-content]',
                exportAs: 'nzCommentContent',
                host: { class: 'ant-comment-content-detail' }
            }]
    }], function () { return []; }, null); })();
    return NzCommentContentDirective;
}());
export { NzCommentContentDirective };
var NzCommentActionHostDirective = /** @class */ (function (_super) {
    __extends(NzCommentActionHostDirective, _super);
    function NzCommentActionHostDirective(componentFactoryResolver, viewContainerRef) {
        return _super.call(this, componentFactoryResolver, viewContainerRef) || this;
    }
    /**
     * @return {?}
     */
    NzCommentActionHostDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnInit.call(this);
    };
    /**
     * @return {?}
     */
    NzCommentActionHostDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        _super.prototype.ngOnDestroy.call(this);
    };
    /**
     * @return {?}
     */
    NzCommentActionHostDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.attach(this.nzCommentActionHost);
    };
    /** @nocollapse */
    NzCommentActionHostDirective.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: ViewContainerRef }
    ]; };
    NzCommentActionHostDirective.propDecorators = {
        nzCommentActionHost: [{ type: Input }]
    };
NzCommentActionHostDirective.ɵfac = function NzCommentActionHostDirective_Factory(t) { return new (t || NzCommentActionHostDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
NzCommentActionHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzCommentActionHostDirective, selectors: [["", "nzCommentActionHost", ""]], inputs: { nzCommentActionHost: "nzCommentActionHost" }, exportAs: ["nzCommentActionHost"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCommentActionHostDirective, [{
        type: Directive,
        args: [{
                selector: '[nzCommentActionHost]',
                exportAs: 'nzCommentActionHost'
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }]; }, { nzCommentActionHost: [{
            type: Input
        }] }); })();
    return NzCommentActionHostDirective;
}(CdkPortalOutlet));
export { NzCommentActionHostDirective };
if (false) {
    /** @type {?} */
    NzCommentActionHostDirective.prototype.nzCommentActionHost;
}
var NzCommentActionComponent = /** @class */ (function () {
    function NzCommentActionComponent(viewContainerRef) {
        this.viewContainerRef = viewContainerRef;
        this.contentPortal = null;
    }
    Object.defineProperty(NzCommentActionComponent.prototype, "content", {
        get: /**
         * @return {?}
         */
        function () {
            return this.contentPortal;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NzCommentActionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.contentPortal = new TemplatePortal(this.implicitContent, this.viewContainerRef);
    };
    /** @nocollapse */
    NzCommentActionComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    NzCommentActionComponent.propDecorators = {
        implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }]
    };
NzCommentActionComponent.ɵfac = function NzCommentActionComponent_Factory(t) { return new (t || NzCommentActionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
NzCommentActionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzCommentActionComponent, selectors: [["nz-comment-action"]], viewQuery: function NzCommentActionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.implicitContent = _t.first);
    } }, exportAs: ["nzCommentAction"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function NzCommentActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, NzCommentActionComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCommentActionComponent, [{
        type: Component,
        args: [{
                selector: 'nz-comment-action',
                exportAs: 'nzCommentAction',
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-template><ng-content></ng-content></ng-template>'
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { implicitContent: [{
            type: ViewChild,
            args: [TemplateRef, { static: true }]
        }] }); })();
    return NzCommentActionComponent;
}());
export { NzCommentActionComponent };
if (false) {
    /** @type {?} */
    NzCommentActionComponent.prototype.implicitContent;
    /**
     * @type {?}
     * @private
     */
    NzCommentActionComponent.prototype.contentPortal;
    /**
     * @type {?}
     * @private
     */
    NzCommentActionComponent.prototype.viewContainerRef;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC1jZWxscy5qcyIsInNvdXJjZXMiOlsibmc6L25nLXpvcnJvLWFudGQvY29tbWVudC9jb21tZW50LWNlbGxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RFLE9BQU8sRUFFTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULHdCQUF3QixFQUN4QixTQUFTLEVBQ1QsS0FBSyxFQUdMLFdBQVcsRUFDWCxTQUFTLEVBQ1QsZ0JBQWdCLEVBQ2hCLGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQzs7Ozs7OztBQUV2QjtBQUVHLElBRkg7QUFDeUIsSUFHYyxDQUFDOzREQUp2QyxTQUFTLFNBQUMsc0JBQ1QsUUFBUSxFQUFFO1lBQThCLHNCQUN4QyxRQUFRLEVBQUUsaUJBQWlCLGtCQUM1Qjs7Ozs7OztnREFDUTtBQUFDLElBQTZCLCtCQUFDO0FBRXhDLENBRndDLEFBSnhDLElBSXdDO0FBQ3hDLFNBRGEsd0JBQXdCO0FBRXJDO0FBQ2dELElBRGhEO0FBQzBCLElBSWMsQ0FBQzs2REFMeEMsU0FBUyxTQUFDLHNCQUNULFFBQVEsRUFBRTtzQkFBMEMsc0JBQ3BELFFBQVEsRUFBRSxrQkFBa0Isc0JBQzVCLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSw0QkFBNEIsRUFBRSxrQkFDOUM7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFBOEIsZ0NBQUM7QUFFekMsQ0FGeUMsQUFMekMsSUFLeUM7QUFDekMsU0FEYSx5QkFBeUI7QUFFdEM7QUFFb0IsSUFFOEIsZ0RBQWU7QUFBQyxJQUdoRSxzQ0FBWSx3QkFBa0QsRUFBRSxnQkFBa0M7QUFDcEcsZUFBSSxrQkFBTSx3QkFBd0IsRUFBRSxnQkFBZ0IsQ0FBQztBQUdsRCxJQUZELENBQUM7QUFDSDtBQUNPO0FBQ0Y7QUFBUSxJQURYLCtDQUFRO0FBQU87QUFDRjtBQUNkLElBRkM7QUFBYyxRQUNaLGlCQUFNLFFBQVEsV0FBRSxDQUFDO0FBQ3JCLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFDTDtBQUFRLElBRFQsa0RBQVc7QUFBTztBQUNMO0FBQVEsSUFEckI7QUFBYyxRQUNaLGlCQUFNLFdBQVcsV0FBRSxDQUFDO0FBQ3hCLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFBbUI7QUFDcEIsSUFETCxzREFBZTtBQUFPO0FBQ1Q7QUFBUSxJQURyQjtBQUFjLFFBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUMxQyxJQUFFLENBQUMsQ0FqQk07QUFBQzt5Q0FKVCxTQUFTLFNBQUMsM0RBSXNCO1FBSC9CLFFBQVEsRUFBRSx1QkFBdUIsekNBR3VFLGdCQTVCeEcsd0JBQXdCO21CQTBCeEIsUUFBUSxFQUFFLDdCQXpCVixnQkFNQSxnQkFBZ0I7QUFDakI7S0FrQmdDLGtCQUNoQyx2QkFuQlU7QUFJTixzQ0FpQkYsS0FBSztBQUFJOzs7Ozs7Ozs7OztvQkFBTTtBQUFDLElBaUJuQixtQ0FBQztBQUVELENBRkMsQUF0QkQsQ0FJa0QsZUFBZSxHQWtCaEU7QUFDRCxTQW5CYSw0QkFBNEI7QUFBSTtBQUFhO0FBQXFCLElBQzdFLDJEQUFxRDtBQUN2RDtBQWtCQTtBQUVjLElBYVosa0NBQW9CLGdCQUFrQztBQUFJLFFBQXRDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFBQyxRQU4vQyxrQkFBYSxHQUEwQixJQUFJLENBQUM7QUFDdEQsSUFLMkQsQ0FBQztBQUM1RCxJQUxFLHNCQUFJLDZDQUFPO0FBQUk7QUFBaUI7QUFDbEI7QUFBWSxRQUQxQjtBQUFjLFlBQ1osT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0FBQzlCLFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBQTJCLE9BRmxEO0FBQ0g7QUFDTztBQUFtQjtBQUFRLElBRWhDLDJDQUFRO0FBQU87QUFDRjtBQUFRLElBRHJCO0FBQWMsUUFDWixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDekYsSUFBRSxDQUFDLENBWks7QUFBQztxQ0FQUixTQUFTLFNBQUMsdkRBT3FCO1FBTjlCLFFBQVEsRUFBRSxsQkFPK0IsZ0JBakR6QyxnQkFBZ0I7RUEwQ2EsRkF6QzlCO2NBMENDLFFBQVEsRUFBRSxpQkFBaUIsekNBMUNsQjtlQTJDVCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSSxzQkFDckMsMUVBeENELGtDQTRDRSxTQUFTLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtFQUp6QixFQUFFLEpBSTZCO29CQUpOLENBQUMsTUFBTSxzQkFDL0MsUUFBUSxFQUFFLHNEQUFzRCxrQkFDakU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBRXFEO0FBQUMsSUFZdkQsK0JBQUM7QUFDQSxDQURBLEFBcEJELElBb0JDO0FBQ0QsU0FkYSx3QkFBd0I7QUFBSTtBQUFhO0FBQ3JDLElBQWYsbURBQThFO0FBQ2hGO0FBQVE7QUFBaUI7QUFBZ0I7QUFBUSxJQUEvQyxpREFBb0Q7QUFDdEQ7QUFDTztBQUFpQjtBQUFnQjtBQUNqQyxJQUdPLG9EQUEwQztBQUFDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDZGtQb3J0YWxPdXRsZXQsIFRlbXBsYXRlUG9ydGFsIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XG5pbXBvcnQge1xuICBBZnRlclZpZXdJbml0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gIERpcmVjdGl2ZSxcbiAgSW5wdXQsXG4gIE9uRGVzdHJveSxcbiAgT25Jbml0LFxuICBUZW1wbGF0ZVJlZixcbiAgVmlld0NoaWxkLFxuICBWaWV3Q29udGFpbmVyUmVmLFxuICBWaWV3RW5jYXBzdWxhdGlvblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnbnotYXZhdGFyW256LWNvbW1lbnQtYXZhdGFyXScsXG4gIGV4cG9ydEFzOiAnbnpDb21tZW50QXZhdGFyJ1xufSlcbmV4cG9ydCBjbGFzcyBOekNvbW1lbnRBdmF0YXJEaXJlY3RpdmUge31cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnbnotY29tbWVudC1jb250ZW50LCBbbnotY29tbWVudC1jb250ZW50XScsXG4gIGV4cG9ydEFzOiAnbnpDb21tZW50Q29udGVudCcsXG4gIGhvc3Q6IHsgY2xhc3M6ICdhbnQtY29tbWVudC1jb250ZW50LWRldGFpbCcgfVxufSlcbmV4cG9ydCBjbGFzcyBOekNvbW1lbnRDb250ZW50RGlyZWN0aXZlIHt9XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuekNvbW1lbnRBY3Rpb25Ib3N0XScsXG4gIGV4cG9ydEFzOiAnbnpDb21tZW50QWN0aW9uSG9zdCdcbn0pXG5leHBvcnQgY2xhc3MgTnpDb21tZW50QWN0aW9uSG9zdERpcmVjdGl2ZSBleHRlbmRzIENka1BvcnRhbE91dGxldCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0IHtcbiAgQElucHV0KCkgbnpDb21tZW50QWN0aW9uSG9zdD86IFRlbXBsYXRlUG9ydGFsIHwgbnVsbDtcblxuICBjb25zdHJ1Y3Rvcihjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZikge1xuICAgIHN1cGVyKGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgdmlld0NvbnRhaW5lclJlZik7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmF0dGFjaCh0aGlzLm56Q29tbWVudEFjdGlvbkhvc3QpO1xuICB9XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ256LWNvbW1lbnQtYWN0aW9uJyxcbiAgZXhwb3J0QXM6ICduekNvbW1lbnRBY3Rpb24nLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgdGVtcGxhdGU6ICc8bmctdGVtcGxhdGU+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PjwvbmctdGVtcGxhdGU+J1xufSlcbmV4cG9ydCBjbGFzcyBOekNvbW1lbnRBY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKFRlbXBsYXRlUmVmLCB7IHN0YXRpYzogdHJ1ZSB9KSBpbXBsaWNpdENvbnRlbnQhOiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgcHJpdmF0ZSBjb250ZW50UG9ydGFsOiBUZW1wbGF0ZVBvcnRhbCB8IG51bGwgPSBudWxsO1xuXG4gIGdldCBjb250ZW50KCk6IFRlbXBsYXRlUG9ydGFsIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMuY29udGVudFBvcnRhbDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZikge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRlbnRQb3J0YWwgPSBuZXcgVGVtcGxhdGVQb3J0YWwodGhpcy5pbXBsaWNpdENvbnRlbnQsIHRoaXMudmlld0NvbnRhaW5lclJlZik7XG4gIH1cbn1cbiJdfQ==