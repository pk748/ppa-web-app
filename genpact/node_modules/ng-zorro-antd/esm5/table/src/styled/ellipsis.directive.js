/**
 * @fileoverview added by tsickle
 * Generated from: src/styled/ellipsis.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __decorate, __metadata } from "tslib";
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directive, Input } from '@angular/core';
import { InputBoolean } from 'ng-zorro-antd/core/util';
import * as ɵngcc0 from '@angular/core';
var NzCellEllipsisDirective = /** @class */ (function () {
    function NzCellEllipsisDirective() {
        this.nzEllipsis = true;
    }
    NzCellEllipsisDirective.propDecorators = {
        nzEllipsis: [{ type: Input }]
    };
    __decorate([
        InputBoolean(),
        __metadata("design:type", Object)
    ], NzCellEllipsisDirective.prototype, "nzEllipsis", void 0);
NzCellEllipsisDirective.ɵfac = function NzCellEllipsisDirective_Factory(t) { return new (t || NzCellEllipsisDirective)(); };
NzCellEllipsisDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzCellEllipsisDirective, selectors: [["th", "nzEllipsis", ""], ["td", "nzEllipsis", ""]], hostVars: 2, hostBindings: function NzCellEllipsisDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("ant-table-cell-ellipsis", ctx.nzEllipsis);
    } }, inputs: { nzEllipsis: "nzEllipsis" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzCellEllipsisDirective, [{
        type: Directive,
        args: [{
                selector: 'th[nzEllipsis],td[nzEllipsis]',
                host: {
                    '[class.ant-table-cell-ellipsis]': 'nzEllipsis'
                }
            }]
    }], function () { return []; }, { nzEllipsis: [{
            type: Input
        }] }); })();
    return NzCellEllipsisDirective;
}());
export { NzCellEllipsisDirective };
if (false) {
    /** @type {?} */
    NzCellEllipsisDirective.ngAcceptInputType_nzEllipsis;
    /** @type {?} */
    NzCellEllipsisDirective.prototype.nzEllipsis;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxsaXBzaXMuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovbmctem9ycm8tYW50ZC90YWJsZS9zcmMvc3R5bGVkL2VsbGlwc2lzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBS0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDOztBQUV2RDtBQUVDLElBRkQ7QUFDd0IsUUFRRyxlQUFVLEdBQUcsSUFBSSxDQUFDO0FBQzdDLElBQUEsQ0FBQyxBQUpRO0FBQUM7WUFOVCxTQUFTLFNBQUMsOUJBT08sNkJBRWYsS0FBSztBQUFJO09BUlYsUUFBUSxmQVFTLElBQVE7QUFSZixBQVE0QixRQUE1QixZQUFZLEVBQUU7T0FSaUIsc0JBQ3pDLElBQUksRUFBRSxuQ0FPb0I7bUJBTnhCLGlDQUFpQyxFQUFFLHREQVFqQiwrREFGdUI7Q0FOTSxzQkFDaEQsa0JBQ0Y7Ozs7Ozs7Ozs7Ozs7O29CQUtEO0FBQUMsSUFBRCw4QkFBQztBQUNBLENBREEsQUFWRCxJQVVDO0FBQ0QsU0FMYSx1QkFBdUI7QUFDbkM7QUFBYTtBQUFxQixJQUFqQyxxREFBa0Q7QUFDcEQ7QUFDb0IsSUFBbEIsNkNBQTJDO0FBQzdDO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCb29sZWFuSW5wdXQgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgSW5wdXRCb29sZWFuIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3V0aWwnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICd0aFtuekVsbGlwc2lzXSx0ZFtuekVsbGlwc2lzXScsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLmFudC10YWJsZS1jZWxsLWVsbGlwc2lzXSc6ICduekVsbGlwc2lzJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE56Q2VsbEVsbGlwc2lzRGlyZWN0aXZlIHtcbiAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256RWxsaXBzaXM6IEJvb2xlYW5JbnB1dDtcblxuICBASW5wdXQoKSBASW5wdXRCb29sZWFuKCkgbnpFbGxpcHNpcyA9IHRydWU7XG59XG4iXX0=