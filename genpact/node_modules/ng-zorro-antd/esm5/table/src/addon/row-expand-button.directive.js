/**
 * @fileoverview added by tsickle
 * Generated from: src/addon/row-expand-button.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Directive, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var NzRowExpandButtonDirective = /** @class */ (function () {
    function NzRowExpandButtonDirective() {
        this.expand = false;
        this.spaceMode = false;
        this.expandChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    NzRowExpandButtonDirective.prototype.onHostClick = /**
     * @return {?}
     */
    function () {
        if (!this.spaceMode) {
            this.expand = !this.expand;
            this.expandChange.next(this.expand);
        }
    };
    NzRowExpandButtonDirective.propDecorators = {
        expand: [{ type: Input }],
        spaceMode: [{ type: Input }],
        expandChange: [{ type: Output }]
    };
NzRowExpandButtonDirective.ɵfac = function NzRowExpandButtonDirective_Factory(t) { return new (t || NzRowExpandButtonDirective)(); };
NzRowExpandButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NzRowExpandButtonDirective, selectors: [["button", "nz-row-expand-button", ""]], hostVars: 9, hostBindings: function NzRowExpandButtonDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function NzRowExpandButtonDirective_click_HostBindingHandler() { return ctx.onHostClick(); });
    } if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("type", "button");
        ɵngcc0.ɵɵclassProp("ant-table-row-expand-icon", true)("ant-table-row-expand-icon-expanded", !ctx.spaceMode && ctx.expand === true)("ant-table-row-expand-icon-collapsed", !ctx.spaceMode && ctx.expand === false)("ant-table-row-expand-icon-spaced", ctx.spaceMode);
    } }, inputs: { expand: "expand", spaceMode: "spaceMode" }, outputs: { expandChange: "expandChange" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzRowExpandButtonDirective, [{
        type: Directive,
        args: [{
                selector: 'button[nz-row-expand-button]',
                host: {
                    '[type]': "'button'",
                    '[class.ant-table-row-expand-icon]': 'true',
                    '[class.ant-table-row-expand-icon-expanded]': "!spaceMode && expand === true",
                    '[class.ant-table-row-expand-icon-collapsed]': "!spaceMode && expand === false",
                    '[class.ant-table-row-expand-icon-spaced]': 'spaceMode',
                    '(click)': 'onHostClick()'
                }
            }]
    }], function () { return []; }, { expand: [{
            type: Input
        }], spaceMode: [{
            type: Input
        }], expandChange: [{
            type: Output
        }] }); })();
    return NzRowExpandButtonDirective;
}());
export { NzRowExpandButtonDirective };
if (false) {
    /** @type {?} */
    NzRowExpandButtonDirective.prototype.expand;
    /** @type {?} */
    NzRowExpandButtonDirective.prototype.spaceMode;
    /** @type {?} */
    NzRowExpandButtonDirective.prototype.expandChange;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LWV4cGFuZC1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovbmctem9ycm8tYW50ZC90YWJsZS9zcmMvYWRkb24vcm93LWV4cGFuZC1idXR0b24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRXZFO0FBRUssSUFGTDtBQUMyQixRQVdoQixXQUFNLEdBQUcsS0FBSyxDQUFDO0FBQzFCLFFBQVcsY0FBUyxHQUFHLEtBQUssQ0FBQztBQUM3QixRQUFxQixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7QUFDdkQsSUFNQSxDQUFDO0FBQ0Q7QUFBUTtBQUFtQjtBQUFRLElBUGpDLGdEQUFXO0FBQU87QUFDTDtBQUFRLElBRHJCO0FBQWMsUUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtBQUN6QixZQUFNLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQ2pDLFlBQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzFDLFNBQUs7QUFDTCxJQUFFLENBQUMsQ0FUTTtBQUFDO1lBWFQsU0FBUyxTQUFDLDlCQVlPLHlCQUFmLEtBQUs7aUJBWE4sUUFBUSxFQUFFLDNCQVdDLDRCQUNWLEtBQUs7bUJBWmtDLG5CQVk3QiwrQkFDVixNQUFNO0FBWlAsSUFBSSxFQUFFLE5BWUs7eUJBWFQsUUFBUSxFQUFFLFVBQVUsMEJBQ3BCLG1DQUFtQyxFQUFFLE1BQU07TUFDM0MsNENBQTRDLEVBQUUsK0JBQStCLDBCQUM3RSw2Q0FBNkMsRUFBRSxnQ0FBZ0MsMEJBQy9FO09BQTBDLEVBQUUsV0FBVywwQkFDdkQsU0FBUyxFQUFFLGVBQWUsc0JBQzNCLGtCQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBSWtCO0FBQUMsSUFPcEIsaUNBQUM7QUFDQSxDQURBLEFBckJELElBcUJDO0FBQ0QsU0FYYSwwQkFBMEI7QUFDdEM7QUFBYTtBQUNOLElBRE4sNENBQXdCO0FBQzFCO0FBQXFCLElBQW5CLCtDQUEyQjtBQUM3QjtBQUFxQixJQUFuQixrREFBcUQ7QUFDdkQ7QUFBRSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ2J1dHRvbltuei1yb3ctZXhwYW5kLWJ1dHRvbl0nLFxuICBob3N0OiB7XG4gICAgJ1t0eXBlXSc6IGAnYnV0dG9uJ2AsXG4gICAgJ1tjbGFzcy5hbnQtdGFibGUtcm93LWV4cGFuZC1pY29uXSc6ICd0cnVlJyxcbiAgICAnW2NsYXNzLmFudC10YWJsZS1yb3ctZXhwYW5kLWljb24tZXhwYW5kZWRdJzogYCFzcGFjZU1vZGUgJiYgZXhwYW5kID09PSB0cnVlYCxcbiAgICAnW2NsYXNzLmFudC10YWJsZS1yb3ctZXhwYW5kLWljb24tY29sbGFwc2VkXSc6IGAhc3BhY2VNb2RlICYmIGV4cGFuZCA9PT0gZmFsc2VgLFxuICAgICdbY2xhc3MuYW50LXRhYmxlLXJvdy1leHBhbmQtaWNvbi1zcGFjZWRdJzogJ3NwYWNlTW9kZScsXG4gICAgJyhjbGljayknOiAnb25Ib3N0Q2xpY2soKSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOelJvd0V4cGFuZEJ1dHRvbkRpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpIGV4cGFuZCA9IGZhbHNlO1xuICBASW5wdXQoKSBzcGFjZU1vZGUgPSBmYWxzZTtcbiAgQE91dHB1dCgpIHJlYWRvbmx5IGV4cGFuZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgb25Ib3N0Q2xpY2soKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLnNwYWNlTW9kZSkge1xuICAgICAgdGhpcy5leHBhbmQgPSAhdGhpcy5leHBhbmQ7XG4gICAgICB0aGlzLmV4cGFuZENoYW5nZS5uZXh0KHRoaXMuZXhwYW5kKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==