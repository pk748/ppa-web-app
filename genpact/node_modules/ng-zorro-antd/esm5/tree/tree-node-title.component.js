/**
 * @fileoverview added by tsickle
 * Generated from: tree-node-title.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { NzTreeNode } from 'ng-zorro-antd/core/tree';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ng-zorro-antd/icon';
import * as ɵngcc3 from 'ng-zorro-antd/core/highlight';

function NzTreeNodeTitleComponent_ng_template_0_Template(rf, ctx) { }
function NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("nzType", ctx_r3.icon);
} }
function NzTreeNodeTitleComponent_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtemplate(2, NzTreeNodeTitleComponent_ng_container_1_span_1_i_2_Template, 1, 1, "i", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("ant-tree-icon__open", ctx_r2.isSwitcherOpen)("ant-tree-icon__close", ctx_r2.isSwitcherClose)("ant-tree-icon_loading", ctx_r2.isLoading)("ant-select-tree-iconEle", ctx_r2.selectMode)("ant-tree-iconEle", !ctx_r2.selectMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ant-select-tree-iconEle", ctx_r2.selectMode)("ant-select-tree-icon__customize", ctx_r2.selectMode)("ant-tree-iconEle", !ctx_r2.selectMode)("ant-tree-icon__customize", !ctx_r2.selectMode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.icon);
} }
function NzTreeNodeTitleComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_span_1_Template, 3, 19, "span", 2);
    ɵngcc0.ɵɵelement(2, "span", 3);
    ɵngcc0.ɵɵpipe(3, "nzHighlight");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.icon && ctx_r1.showIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind4(3, 2, ctx_r1.title, ctx_r1.matchedValue, "i", "font-highlight"), ɵngcc0.ɵɵsanitizeHtml);
} }
var _c0 = function (a0, a1) { return { $implicit: a0, origin: a1 }; };
var NzTreeNodeTitleComponent = /** @class */ (function () {
    function NzTreeNodeTitleComponent() {
        this.treeTemplate = null;
        this.selectMode = false;
    }
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "canDraggable", {
        get: /**
         * @return {?}
         */
        function () {
            return this.draggable && !this.isDisabled ? true : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "matchedValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isMatched ? this.searchValue : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "isSwitcherOpen", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isExpanded && !this.isLeaf;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NzTreeNodeTitleComponent.prototype, "isSwitcherClose", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.isExpanded && !this.isLeaf;
        },
        enumerable: true,
        configurable: true
    });
    NzTreeNodeTitleComponent.propDecorators = {
        searchValue: [{ type: Input }],
        treeTemplate: [{ type: Input }],
        draggable: [{ type: Input }],
        showIcon: [{ type: Input }],
        selectMode: [{ type: Input }],
        context: [{ type: Input }],
        icon: [{ type: Input }],
        title: [{ type: Input }],
        isLoading: [{ type: Input }],
        isSelected: [{ type: Input }],
        isDisabled: [{ type: Input }],
        isMatched: [{ type: Input }],
        isExpanded: [{ type: Input }],
        isLeaf: [{ type: Input }]
    };
NzTreeNodeTitleComponent.ɵfac = function NzTreeNodeTitleComponent_Factory(t) { return new (t || NzTreeNodeTitleComponent)(); };
NzTreeNodeTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NzTreeNodeTitleComponent, selectors: [["nz-tree-node-title"]], hostVars: 21, hostBindings: function NzTreeNodeTitleComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("title", ctx.title)("draggable", ctx.canDraggable)("aria-grabbed", ctx.canDraggable);
        ɵngcc0.ɵɵclassProp("draggable", ctx.canDraggable)("ant-select-tree-node-content-wrapper", ctx.selectMode)("ant-select-tree-node-content-wrapper-open", ctx.selectMode && ctx.isSwitcherOpen)("ant-select-tree-node-content-wrapper-close", ctx.selectMode && ctx.isSwitcherClose)("ant-select-tree-node-selected", ctx.selectMode && ctx.isSelected)("ant-tree-node-content-wrapper", !ctx.selectMode)("ant-tree-node-content-wrapper-open", !ctx.selectMode && ctx.isSwitcherOpen)("ant-tree-node-content-wrapper-close", !ctx.selectMode && ctx.isSwitcherClose)("ant-tree-node-selected", !ctx.selectMode && ctx.isSelected);
    } }, inputs: { treeTemplate: "treeTemplate", selectMode: "selectMode", searchValue: "searchValue", draggable: "draggable", showIcon: "showIcon", context: "context", icon: "icon", title: "title", isLoading: "isLoading", isSelected: "isSelected", isDisabled: "isDisabled", isMatched: "isMatched", isExpanded: "isExpanded", isLeaf: "isLeaf" }, decls: 2, vars: 6, consts: [[3, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [3, "ant-tree-icon__open", "ant-tree-icon__close", "ant-tree-icon_loading", "ant-select-tree-iconEle", "ant-tree-iconEle", 4, "ngIf"], [1, "ant-tree-title", 3, "innerHTML"], ["nz-icon", "", 3, "nzType", 4, "ngIf"], ["nz-icon", "", 3, "nzType"]], template: function NzTreeNodeTitleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NzTreeNodeTitleComponent_ng_template_0_Template, 0, 0, "ng-template", 0);
        ɵngcc0.ɵɵtemplate(1, NzTreeNodeTitleComponent_ng_container_1_Template, 4, 7, "ng-container", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.treeTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx.context, ctx.context.origin));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.treeTemplate);
    } }, directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc2.NzIconDirective], pipes: [ɵngcc3.NzHighlightPipe], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzTreeNodeTitleComponent, [{
        type: Component,
        args: [{
                selector: 'nz-tree-node-title',
                template: " <ng-template [ngTemplateOutlet]=\"treeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\">\n    </ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"> </span>\n    </ng-container>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                host: {
                    '[attr.title]': 'title',
                    '[attr.draggable]': 'canDraggable',
                    '[attr.aria-grabbed]': 'canDraggable',
                    '[class.draggable]': 'canDraggable',
                    '[class.ant-select-tree-node-content-wrapper]': "selectMode",
                    '[class.ant-select-tree-node-content-wrapper-open]': "selectMode && isSwitcherOpen",
                    '[class.ant-select-tree-node-content-wrapper-close]': "selectMode && isSwitcherClose",
                    '[class.ant-select-tree-node-selected]': "selectMode && isSelected",
                    '[class.ant-tree-node-content-wrapper]': "!selectMode",
                    '[class.ant-tree-node-content-wrapper-open]': "!selectMode && isSwitcherOpen",
                    '[class.ant-tree-node-content-wrapper-close]': "!selectMode && isSwitcherClose",
                    '[class.ant-tree-node-selected]': "!selectMode && isSelected"
                }
            }]
    }], function () { return []; }, { treeTemplate: [{
            type: Input
        }], selectMode: [{
            type: Input
        }], searchValue: [{
            type: Input
        }], draggable: [{
            type: Input
        }], showIcon: [{
            type: Input
        }], context: [{
            type: Input
        }], icon: [{
            type: Input
        }], title: [{
            type: Input
        }], isLoading: [{
            type: Input
        }], isSelected: [{
            type: Input
        }], isDisabled: [{
            type: Input
        }], isMatched: [{
            type: Input
        }], isExpanded: [{
            type: Input
        }], isLeaf: [{
            type: Input
        }] }); })();
    return NzTreeNodeTitleComponent;
}());
export { NzTreeNodeTitleComponent };
if (false) {
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.searchValue;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.treeTemplate;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.draggable;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.showIcon;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.selectMode;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.context;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.icon;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.title;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isLoading;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isSelected;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isDisabled;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isMatched;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isExpanded;
    /** @type {?} */
    NzTreeNodeTitleComponent.prototype.isLeaf;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1ub2RlLXRpdGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L25nLXpvcnJvLWFudGQvdHJlZS90cmVlLW5vZGUtdGl0bGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUtBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxVQUFVLEVBQXFCLE1BQU0seUJBQXlCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRXhFO0FBRWEsSUFGYjtBQUN5QixRQTBDZCxpQkFBWSxHQUE2RSxJQUFJLENBQUM7QUFDekcsUUFFVyxlQUFVLEdBQUcsS0FBSyxDQUFDO0FBQzlCLElBeUJBLENBQUM7QUFDRCxJQWhCRSxzQkFBSSxrREFBWTtBQUFJO0FBQ3RCO0FBQXVCO0FBQVksUUFEakM7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQzVELFFBQUUsQ0FBQztBQUVIO0FBQTBCO0FBQ0osT0FIbkI7QUFDSCxJQUNFLHNCQUFJLGtEQUFZO0FBQUk7QUFDZDtBQUF1QjtBQUFZLFFBRHpDO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNsRCxRQUFFLENBQUM7QUFFSDtBQUEwQjtBQUNQLE9BSGhCO0FBQ0gsSUFDRSxzQkFBSSxvREFBYztBQUFJO0FBQ2pCO0FBQXVCO0FBQVksUUFEeEM7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDM0MsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDUixPQUhmO0FBQ0gsSUFDRSxzQkFBSSxxREFBZTtBQUFJO0FBQ2xCO0FBQXVCO0FBQVksUUFEeEM7QUFBYyxZQUNaLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUM1QyxRQUFFLENBQUM7QUFDRjtBQUN3QjtBQUEyQixPQUZqRCxBQTlCSztBQUFDO1lBekNSLFNBQVMsU0FBQyw5QkEwQ00sOEJBQWQsS0FBSztZQXpDTixRQUFRLEVBQUUsdEJBeUNDLCtCQUNWLEtBQUs7Q0ExQ3dCLHNCQUM5QixRQUFRLEVBQUUsakNBeUNDLDRCQUNWLEtBQUs7QUFBSywyQkFDVixLQUFLO0FBQUssNkJBQ1YsS0FBSztBQUFLLDBCQUNWLEtBQUs7QUFBSyx1QkFDVixLQUFLO0FBQUssd0JBQ1YsS0FBSztBQUFLLDRCQUNWLEtBQUs7QUFBSyw2QkFDVixLQUFLO0FBQUssNkJBQ1YsS0FBSztBQUFLLDRCQUNWLEtBQUs7QUFBSyw2QkFDVixLQUFLO0FBQUsseUJBQ1YsS0FBSztBQUFJOzs7O2tJQWhDUSxzQkFDbEIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sc0JBQy9DLG1CQUFtQixFQUFFLEtBQUssc0JBQzFCLElBQUksRUFBRSwwQkFDSixjQUFjLEVBQUUsT0FBTywwQkFDdkIsa0JBQWtCLEVBQUUsY0FBYywwQkFDbEMscUJBQXFCLEVBQUUsY0FBYywwQkFDckMsbUJBQW1CLEVBQUUsY0FBYywwQkFDbkMsOENBQThDLEVBQUUsWUFBWTtHQUM1RCxtREFBbUQsRUFBRSw4QkFBOEIsMEJBQ25GLG9EQUFvRCxFQUFFLCtCQUErQiwwQkFDckYsdUNBQXVDLEVBQUUsMEJBQTBCLDBCQUNuRSx1Q0FBdUMsRUFBRSxhQUFhLDBCQUN0RCw0Q0FBNEMsRUFBRSwrQkFBK0IsMEJBQzdFLDZDQUE2QyxFQUFFLGdDQUFnQywwQkFDL0UsZ0NBQWdDLEVBQUUsMkJBQTJCLHNCQUM5RCxrQkFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFlaUI7QUFBQyxJQWlCbkIsK0JBQUM7QUFDQSxDQURBLEFBeEVELElBd0VDO0FBQ0QsU0FoQ2Esd0JBQXdCO0FBQ3BDO0FBQWE7QUFDWixJQURBLCtDQUE4QjtBQUNoQztBQUFxQixJQUFuQixnREFBdUc7QUFDekc7QUFBcUIsSUFBbkIsNkNBQTZCO0FBQy9CO0FBQXFCLElBQW5CLDRDQUE0QjtBQUM5QjtBQUFxQixJQUFuQiw4Q0FBNEI7QUFDOUI7QUFBcUIsSUFBbkIsMkNBQThCO0FBQ2hDO0FBQXFCLElBQW5CLHdDQUF1QjtBQUN6QjtBQUFxQixJQUFuQix5Q0FBd0I7QUFDMUI7QUFBcUIsSUFBbkIsNkNBQTZCO0FBQy9CO0FBQXFCLElBQW5CLDhDQUE4QjtBQUNoQztBQUFxQixJQUFuQiw4Q0FBOEI7QUFDaEM7QUFBcUIsSUFBbkIsNkNBQTZCO0FBQy9CO0FBQXFCLElBQW5CLDhDQUE4QjtBQUNoQztBQUFxQixJQUFuQiwwQ0FBMEI7QUFDNUI7QUFDQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpUcmVlTm9kZSwgTnpUcmVlTm9kZU9wdGlvbnMgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHJlZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ256LXRyZWUtbm9kZS10aXRsZScsXG4gIHRlbXBsYXRlOiBgIDxuZy10ZW1wbGF0ZSBbbmdUZW1wbGF0ZU91dGxldF09XCJ0cmVlVGVtcGxhdGVcIiBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwieyAkaW1wbGljaXQ6IGNvbnRleHQsIG9yaWdpbjogY29udGV4dC5vcmlnaW4gfVwiPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiF0cmVlVGVtcGxhdGVcIj5cbiAgICAgIDxzcGFuXG4gICAgICAgICpuZ0lmPVwiaWNvbiAmJiBzaG93SWNvblwiXG4gICAgICAgIFtjbGFzcy5hbnQtdHJlZS1pY29uX19vcGVuXT1cImlzU3dpdGNoZXJPcGVuXCJcbiAgICAgICAgW2NsYXNzLmFudC10cmVlLWljb25fX2Nsb3NlXT1cImlzU3dpdGNoZXJDbG9zZVwiXG4gICAgICAgIFtjbGFzcy5hbnQtdHJlZS1pY29uX2xvYWRpbmddPVwiaXNMb2FkaW5nXCJcbiAgICAgICAgW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1pY29uRWxlXT1cInNlbGVjdE1vZGVcIlxuICAgICAgICBbY2xhc3MuYW50LXRyZWUtaWNvbkVsZV09XCIhc2VsZWN0TW9kZVwiXG4gICAgICA+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1pY29uRWxlXT1cInNlbGVjdE1vZGVcIlxuICAgICAgICAgIFtjbGFzcy5hbnQtc2VsZWN0LXRyZWUtaWNvbl9fY3VzdG9taXplXT1cInNlbGVjdE1vZGVcIlxuICAgICAgICAgIFtjbGFzcy5hbnQtdHJlZS1pY29uRWxlXT1cIiFzZWxlY3RNb2RlXCJcbiAgICAgICAgICBbY2xhc3MuYW50LXRyZWUtaWNvbl9fY3VzdG9taXplXT1cIiFzZWxlY3RNb2RlXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxpIG56LWljb24gKm5nSWY9XCJpY29uXCIgW256VHlwZV09XCJpY29uXCI+PC9pPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cImFudC10cmVlLXRpdGxlXCIgW2lubmVySFRNTF09XCJ0aXRsZSB8IG56SGlnaGxpZ2h0OiBtYXRjaGVkVmFsdWU6J2knOidmb250LWhpZ2hsaWdodCdcIj4gPC9zcGFuPlxuICAgIDwvbmctY29udGFpbmVyPmAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci50aXRsZV0nOiAndGl0bGUnLFxuICAgICdbYXR0ci5kcmFnZ2FibGVdJzogJ2NhbkRyYWdnYWJsZScsXG4gICAgJ1thdHRyLmFyaWEtZ3JhYmJlZF0nOiAnY2FuRHJhZ2dhYmxlJyxcbiAgICAnW2NsYXNzLmRyYWdnYWJsZV0nOiAnY2FuRHJhZ2dhYmxlJyxcbiAgICAnW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1ub2RlLWNvbnRlbnQtd3JhcHBlcl0nOiBgc2VsZWN0TW9kZWAsXG4gICAgJ1tjbGFzcy5hbnQtc2VsZWN0LXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXItb3Blbl0nOiBgc2VsZWN0TW9kZSAmJiBpc1N3aXRjaGVyT3BlbmAsXG4gICAgJ1tjbGFzcy5hbnQtc2VsZWN0LXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXItY2xvc2VdJzogYHNlbGVjdE1vZGUgJiYgaXNTd2l0Y2hlckNsb3NlYCxcbiAgICAnW2NsYXNzLmFudC1zZWxlY3QtdHJlZS1ub2RlLXNlbGVjdGVkXSc6IGBzZWxlY3RNb2RlICYmIGlzU2VsZWN0ZWRgLFxuICAgICdbY2xhc3MuYW50LXRyZWUtbm9kZS1jb250ZW50LXdyYXBwZXJdJzogYCFzZWxlY3RNb2RlYCxcbiAgICAnW2NsYXNzLmFudC10cmVlLW5vZGUtY29udGVudC13cmFwcGVyLW9wZW5dJzogYCFzZWxlY3RNb2RlICYmIGlzU3dpdGNoZXJPcGVuYCxcbiAgICAnW2NsYXNzLmFudC10cmVlLW5vZGUtY29udGVudC13cmFwcGVyLWNsb3NlXSc6IGAhc2VsZWN0TW9kZSAmJiBpc1N3aXRjaGVyQ2xvc2VgLFxuICAgICdbY2xhc3MuYW50LXRyZWUtbm9kZS1zZWxlY3RlZF0nOiBgIXNlbGVjdE1vZGUgJiYgaXNTZWxlY3RlZGBcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOelRyZWVOb2RlVGl0bGVDb21wb25lbnQge1xuICBASW5wdXQoKSBzZWFyY2hWYWx1ZSE6IHN0cmluZztcbiAgQElucHV0KCkgdHJlZVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjx7ICRpbXBsaWNpdDogTnpUcmVlTm9kZTsgb3JpZ2luOiBOelRyZWVOb2RlT3B0aW9ucyB9PiB8IG51bGwgPSBudWxsO1xuICBASW5wdXQoKSBkcmFnZ2FibGUhOiBib29sZWFuO1xuICBASW5wdXQoKSBzaG93SWNvbiE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIHNlbGVjdE1vZGUgPSBmYWxzZTtcbiAgQElucHV0KCkgY29udGV4dCE6IE56VHJlZU5vZGU7XG4gIEBJbnB1dCgpIGljb24hOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHRpdGxlITogc3RyaW5nO1xuICBASW5wdXQoKSBpc0xvYWRpbmchOiBib29sZWFuO1xuICBASW5wdXQoKSBpc1NlbGVjdGVkITogYm9vbGVhbjtcbiAgQElucHV0KCkgaXNEaXNhYmxlZCE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGlzTWF0Y2hlZCE6IGJvb2xlYW47XG4gIEBJbnB1dCgpIGlzRXhwYW5kZWQhOiBib29sZWFuO1xuICBASW5wdXQoKSBpc0xlYWYhOiBib29sZWFuO1xuXG4gIGdldCBjYW5EcmFnZ2FibGUoKTogYm9vbGVhbiB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmRyYWdnYWJsZSAmJiAhdGhpcy5pc0Rpc2FibGVkID8gdHJ1ZSA6IG51bGw7XG4gIH1cblxuICBnZXQgbWF0Y2hlZFZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuaXNNYXRjaGVkID8gdGhpcy5zZWFyY2hWYWx1ZSA6ICcnO1xuICB9XG5cbiAgZ2V0IGlzU3dpdGNoZXJPcGVuKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmlzRXhwYW5kZWQgJiYgIXRoaXMuaXNMZWFmO1xuICB9XG5cbiAgZ2V0IGlzU3dpdGNoZXJDbG9zZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gIXRoaXMuaXNFeHBhbmRlZCAmJiAhdGhpcy5pc0xlYWY7XG4gIH1cbn1cbiJdfQ==