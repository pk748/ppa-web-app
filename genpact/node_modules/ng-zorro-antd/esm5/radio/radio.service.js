/**
 * @fileoverview added by tsickle
 * Generated from: radio.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Injectable } from '@angular/core';
import { ReplaySubject, Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
var NzRadioService = /** @class */ (function () {
    function NzRadioService() {
        this.selected$ = new ReplaySubject(1);
        this.touched$ = new Subject();
        this.disabled$ = new ReplaySubject(1);
        this.name$ = new ReplaySubject(1);
    }
    /**
     * @return {?}
     */
    NzRadioService.prototype.touch = /**
     * @return {?}
     */
    function () {
        this.touched$.next();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NzRadioService.prototype.select = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.selected$.next(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NzRadioService.prototype.setDisabled = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.disabled$.next(value);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NzRadioService.prototype.setName = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.name$.next(value);
    };
NzRadioService.ɵfac = function NzRadioService_Factory(t) { return new (t || NzRadioService)(); };
NzRadioService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NzRadioService, factory: function (t) { return NzRadioService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzRadioService, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return NzRadioService;
}());
export { NzRadioService };
if (false) {
    /** @type {?} */
    NzRadioService.prototype.selected$;
    /** @type {?} */
    NzRadioService.prototype.touched$;
    /** @type {?} */
    NzRadioService.prototype.disabled$;
    /** @type {?} */
    NzRadioService.prototype.name$;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8uc2VydmljZS5qcyIsInNvdXJjZXMiOlsibmc6L25nLXpvcnJvLWFudGQvcmFkaW8vcmFkaW8uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFJQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUU5QztBQUVNLElBRk47QUFDYyxRQUNaLGNBQVMsR0FBRyxJQUFJLGFBQWEsQ0FBWSxDQUFDLENBQUMsQ0FBQztBQUM5QyxRQUFFLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO0FBQ2pDLFFBQUUsY0FBUyxHQUFHLElBQUksYUFBYSxDQUFVLENBQUMsQ0FBQyxDQUFDO0FBQzVDLFFBQUUsVUFBSyxHQUFHLElBQUksYUFBYSxDQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLElBWUEsQ0FBQztBQUNEO0FBQVE7QUFBbUI7QUFBUSxJQWJqQyw4QkFBSztBQUFPO0FBQ0M7QUFBUSxJQURyQjtBQUFjLFFBQ1osSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN6QixJQUFFLENBQUM7QUFDRjtBQUFRO0FBQXdCO0FBQ2hCO0FBQVEsSUFEdkIsK0JBQU07QUFBTztBQUNYO0FBQW1CO0FBQVEsSUFEN0IsVUFBTyxLQUFnQjtBQUFJLFFBQ3pCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQy9CLElBQUUsQ0FBQztBQUNGO0FBQVE7QUFBd0I7QUFDbkI7QUFBUSxJQURwQixvQ0FBVztBQUFPO0FBQ2Q7QUFBbUI7QUFDeEIsSUFGQyxVQUFZLEtBQWM7QUFBSSxRQUM1QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMvQixJQUFFLENBQUM7QUFDRjtBQUFRO0FBQ1Q7QUFBbUI7QUFBUSxJQUR6QixnQ0FBTztBQUFPO0FBQ1Q7QUFBbUI7QUFHMUIsSUFKRSxVQUFRLEtBQWE7QUFBSSxRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMzQixJQUFFLENBQUM7a0RBakJGLFVBQVU7Ozs7Z0RBQ0w7QUFBQyxJQWlCUCxxQkFBQztBQUNBLENBREEsQUFsQkQsSUFrQkM7QUFDRCxTQWxCYSxjQUFjO0FBQzFCO0FBQWE7QUFBcUIsSUFBakMsbUNBQTRDO0FBQzlDO0FBQXFCLElBQW5CLGtDQUErQjtBQUNqQztBQUFxQixJQUFuQixtQ0FBMEM7QUFDNUM7QUFBcUIsSUFBbkIsK0JBQXFDO0FBQ3ZDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IFJlcGxheVN1YmplY3QsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE56UmFkaW9TZXJ2aWNlIHtcbiAgc2VsZWN0ZWQkID0gbmV3IFJlcGxheVN1YmplY3Q8TnpTYWZlQW55PigxKTtcbiAgdG91Y2hlZCQgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuICBkaXNhYmxlZCQgPSBuZXcgUmVwbGF5U3ViamVjdDxib29sZWFuPigxKTtcbiAgbmFtZSQgPSBuZXcgUmVwbGF5U3ViamVjdDxzdHJpbmc+KDEpO1xuICB0b3VjaCgpOiB2b2lkIHtcbiAgICB0aGlzLnRvdWNoZWQkLm5leHQoKTtcbiAgfVxuICBzZWxlY3QodmFsdWU6IE56U2FmZUFueSk6IHZvaWQge1xuICAgIHRoaXMuc2VsZWN0ZWQkLm5leHQodmFsdWUpO1xuICB9XG4gIHNldERpc2FibGVkKHZhbHVlOiBib29sZWFuKTogdm9pZCB7XG4gICAgdGhpcy5kaXNhYmxlZCQubmV4dCh2YWx1ZSk7XG4gIH1cbiAgc2V0TmFtZSh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5uYW1lJC5uZXh0KHZhbHVlKTtcbiAgfVxufVxuIl19