/**
 * @fileoverview added by tsickle
 * Generated from: lib/lib-packer.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
/**
 * A collection module of standard output for all lib components
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { NzOutletModule } from 'ng-zorro-antd/core/outlet';
import { NzI18nModule } from 'ng-zorro-antd/i18n';
import { NzTimePickerModule } from 'ng-zorro-antd/time-picker';
import { DateHeaderComponent } from './date-header.component';
import { DateTableComponent } from './date-table.component';
import { DecadeHeaderComponent } from './decade-header.component';
import { DecadeTableComponent } from './decade-table.component';
import { MonthHeaderComponent } from './month-header.component';
import { MonthTableComponent } from './month-table.component';
import { YearHeaderComponent } from './year-header.component';
import { YearTableComponent } from './year-table.component';
import * as ɵngcc0 from '@angular/core';
var LibPackerModule = /** @class */ (function () {
    function LibPackerModule() {
    }
LibPackerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LibPackerModule });
LibPackerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LibPackerModule_Factory(t) { return new (t || LibPackerModule)(); }, imports: [[CommonModule, FormsModule, NzI18nModule, NzTimePickerModule, NzOutletModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LibPackerModule, { declarations: function () { return [DateHeaderComponent,
        DateTableComponent,
        DecadeHeaderComponent,
        DecadeTableComponent,
        MonthHeaderComponent,
        MonthTableComponent,
        YearHeaderComponent,
        YearTableComponent]; }, imports: function () { return [CommonModule, FormsModule, NzI18nModule, NzTimePickerModule, NzOutletModule]; }, exports: function () { return [DateHeaderComponent,
        DateTableComponent,
        DecadeHeaderComponent,
        DecadeTableComponent,
        MonthHeaderComponent,
        MonthTableComponent,
        YearHeaderComponent,
        YearTableComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LibPackerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule, NzI18nModule, NzTimePickerModule, NzOutletModule],
                exports: [
                    DateHeaderComponent,
                    DateTableComponent,
                    DecadeHeaderComponent,
                    DecadeTableComponent,
                    MonthHeaderComponent,
                    MonthTableComponent,
                    YearHeaderComponent,
                    YearTableComponent
                ],
                declarations: [
                    DateHeaderComponent,
                    DateTableComponent,
                    DecadeHeaderComponent,
                    DecadeTableComponent,
                    MonthHeaderComponent,
                    MonthTableComponent,
                    YearHeaderComponent,
                    YearTableComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return LibPackerModule;
}());
export { LibPackerModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLXBhY2tlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZy16b3Jyby1hbnRkL2RhdGUtcGlja2VyL2xpYi9saWItcGFja2VyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFTQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTNELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFFNUQ7QUFDdUMsSUFEdkM7QUFDaUIsSUFzQmEsQ0FBQzttREF2QjlCLFFBQVEsU0FBQztlQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLGNBQWMsQ0FBQyxzQkFDdEYsT0FBTyxFQUFFLDBCQUNQLG1CQUFtQiwwQkFDbkIsa0JBQWtCO2tCQUNsQixxQkFBcUIsMEJBQ3JCLG9CQUFvQiwwQkFDcEIsb0JBQW9CLDBCQUNwQjtRQUFtQjtNQUNuQixtQkFBbUI7b0JBQ25CO1FBQWtCO0FBQ25CLHNCQUNEO0tBQVksRUFBRTtJQUNaLG1CQUFtQiwwQkFDbkIsa0JBQWtCLDBCQUNsQixxQkFBcUIsMEJBQ3JCLG9CQUFvQiwwQkFDcEI7VUFBb0I7UUFDcEIsbUJBQW1CO3NCQUNuQjtXQUFtQjtPQUNuQixrQkFBa0I7a0JBQ25CO09BQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFBb0Isc0JBQUM7QUFDOUIsQ0FEOEIsQUF2Qi9CLElBdUIrQjtBQUMvQixTQURhLGVBQWU7QUFDNUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG4vKipcbiAqIEEgY29sbGVjdGlvbiBtb2R1bGUgb2Ygc3RhbmRhcmQgb3V0cHV0IGZvciBhbGwgbGliIGNvbXBvbmVudHNcbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTnpPdXRsZXRNb2R1bGUgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvb3V0bGV0JztcblxuaW1wb3J0IHsgTnpJMThuTW9kdWxlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IE56VGltZVBpY2tlck1vZHVsZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvdGltZS1waWNrZXInO1xuaW1wb3J0IHsgRGF0ZUhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IERhdGVUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS10YWJsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGVjYWRlSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9kZWNhZGUtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZWNhZGVUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vZGVjYWRlLXRhYmxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNb250aEhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vbW9udGgtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNb250aFRhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi9tb250aC10YWJsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgWWVhckhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4veWVhci1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFllYXJUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4veWVhci10YWJsZS5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSwgTnpJMThuTW9kdWxlLCBOelRpbWVQaWNrZXJNb2R1bGUsIE56T3V0bGV0TW9kdWxlXSxcbiAgZXhwb3J0czogW1xuICAgIERhdGVIZWFkZXJDb21wb25lbnQsXG4gICAgRGF0ZVRhYmxlQ29tcG9uZW50LFxuICAgIERlY2FkZUhlYWRlckNvbXBvbmVudCxcbiAgICBEZWNhZGVUYWJsZUNvbXBvbmVudCxcbiAgICBNb250aEhlYWRlckNvbXBvbmVudCxcbiAgICBNb250aFRhYmxlQ29tcG9uZW50LFxuICAgIFllYXJIZWFkZXJDb21wb25lbnQsXG4gICAgWWVhclRhYmxlQ29tcG9uZW50XG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIERhdGVIZWFkZXJDb21wb25lbnQsXG4gICAgRGF0ZVRhYmxlQ29tcG9uZW50LFxuICAgIERlY2FkZUhlYWRlckNvbXBvbmVudCxcbiAgICBEZWNhZGVUYWJsZUNvbXBvbmVudCxcbiAgICBNb250aEhlYWRlckNvbXBvbmVudCxcbiAgICBNb250aFRhYmxlQ29tcG9uZW50LFxuICAgIFllYXJIZWFkZXJDb21wb25lbnQsXG4gICAgWWVhclRhYmxlQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTGliUGFja2VyTW9kdWxlIHt9XG4iXX0=