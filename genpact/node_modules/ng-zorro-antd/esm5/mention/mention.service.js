/**
 * @fileoverview added by tsickle
 * Generated from: mention.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
var NzMentionService = /** @class */ (function () {
    function NzMentionService() {
        this.triggerChange$ = new Subject();
    }
    /**
     * @return {?}
     */
    NzMentionService.prototype.triggerChanged = /**
     * @return {?}
     */
    function () {
        return this.triggerChange$.asObservable();
    };
    /**
     * @param {?} trigger
     * @return {?}
     */
    NzMentionService.prototype.registerTrigger = /**
     * @param {?} trigger
     * @return {?}
     */
    function (trigger) {
        if (this.trigger !== trigger) {
            this.trigger = trigger;
            this.triggerChange$.next(trigger);
        }
    };
    /**
     * @return {?}
     */
    NzMentionService.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.triggerChange$.complete();
    };
NzMentionService.ɵfac = function NzMentionService_Factory(t) { return new (t || NzMentionService)(); };
NzMentionService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NzMentionService, factory: function (t) { return NzMentionService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NzMentionService, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return NzMentionService;
}());
export { NzMentionService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NzMentionService.prototype.trigger;
    /**
     * @type {?}
     * @private
     */
    NzMentionService.prototype.triggerChange$;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudGlvbi5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZzovbmctem9ycm8tYW50ZC9tZW50aW9uL21lbnRpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQSxPQUFPLEVBQUUsVUFBVSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBYyxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBSTNDO0FBQ3NDLElBRHRDO0FBQ2dCLFFBRU4sbUJBQWMsR0FBRyxJQUFJLE9BQU8sRUFBNkIsQ0FBQztBQUNwRSxJQWVBLENBQUM7QUFDRDtBQUFRO0FBQW1CO0FBQVEsSUFmakMseUNBQWM7QUFBTztBQUFtQjtBQUFRLElBQWhEO0FBQWMsUUFDWixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDOUMsSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUEwQjtBQUFtQjtBQUFRLElBQTNELDBDQUFlO0FBQU87QUFBMEI7QUFDM0M7QUFBUSxJQURiLFVBQWdCLE9BQWtDO0FBQUksUUFDcEQsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE9BQU8sRUFBRTtBQUNsQyxZQUFNLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0FBQzdCLFlBQU0sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDeEMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUVIO0FBQVE7QUFDTDtBQUFRLElBRFQsc0NBQVc7QUFBTztBQUNMO0FBQVEsSUFEckI7QUFBYyxRQUNaLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDbkMsSUFBRSxDQUFDO29EQWxCRixVQUFVOzs7O2dEQUNMO0FBQUMsSUFrQlAsdUJBQUM7QUFDQSxDQURBLEFBbkJELElBbUJDO0FBQ0QsU0FuQmEsZ0JBQWdCO0FBQUk7QUFBYTtBQUM3QztBQUFpQjtBQUFnQjtBQUFRLElBQXhDLG1DQUE0QztBQUM5QztBQUFRO0FBQWlCO0FBQWdCO0FBQVEsSUFBL0MsMENBQWtFO0FBQ3BFO0FBQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBJbmplY3RhYmxlLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgTnpNZW50aW9uVHJpZ2dlckRpcmVjdGl2ZSB9IGZyb20gJy4vbWVudGlvbi10cmlnZ2VyJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE56TWVudGlvblNlcnZpY2UgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcml2YXRlIHRyaWdnZXI/OiBOek1lbnRpb25UcmlnZ2VyRGlyZWN0aXZlO1xuICBwcml2YXRlIHRyaWdnZXJDaGFuZ2UkID0gbmV3IFN1YmplY3Q8TnpNZW50aW9uVHJpZ2dlckRpcmVjdGl2ZT4oKTtcblxuICB0cmlnZ2VyQ2hhbmdlZCgpOiBPYnNlcnZhYmxlPE56TWVudGlvblRyaWdnZXJEaXJlY3RpdmU+IHtcbiAgICByZXR1cm4gdGhpcy50cmlnZ2VyQ2hhbmdlJC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHJlZ2lzdGVyVHJpZ2dlcih0cmlnZ2VyOiBOek1lbnRpb25UcmlnZ2VyRGlyZWN0aXZlKTogdm9pZCB7XG4gICAgaWYgKHRoaXMudHJpZ2dlciAhPT0gdHJpZ2dlcikge1xuICAgICAgdGhpcy50cmlnZ2VyID0gdHJpZ2dlcjtcbiAgICAgIHRoaXMudHJpZ2dlckNoYW5nZSQubmV4dCh0cmlnZ2VyKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLnRyaWdnZXJDaGFuZ2UkLmNvbXBsZXRlKCk7XG4gIH1cbn1cbiJdfQ==