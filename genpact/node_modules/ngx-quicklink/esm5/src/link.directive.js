import * as tslib_1 from "tslib";
import { Directive, ElementRef, Optional, Inject, Input } from '@angular/core';
import { RouterLink, RouterLinkWithHref } from '@angular/router';
import { LinkHandler } from './link-handler.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
var LinkDirective = /** @class */ (function () {
    function LinkDirective(linkHandlers, el, link, linkWithHref) {
        this.linkHandlers = linkHandlers;
        this.el = el;
        this.linkHandler = this.linkHandlers.filter(function (h) { return h.supported(); }).shift();
        this.rl = link || linkWithHref;
    }
    LinkDirective.prototype.ngOnChanges = function (c) {
        if (c.routerLink) {
            this.linkHandler.unregister(this);
            this.linkHandler.register(this);
        }
    };
    LinkDirective.prototype.ngOnDestroy = function () {
        this.linkHandler.unregister(this);
    };
    Object.defineProperty(LinkDirective.prototype, "element", {
        get: function () {
            return this.el.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LinkDirective.prototype, "urlTree", {
        get: function () {
            return this.rl.urlTree;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], LinkDirective.prototype, "routerLink", void 0);
    LinkDirective = tslib_1.__decorate([ tslib_1.__param(0, Inject(LinkHandler)),
        tslib_1.__param(2, Optional()),
        tslib_1.__param(3, Optional()),
        tslib_1.__metadata("design:paramtypes", [Array, ElementRef,
            RouterLink,
            RouterLinkWithHref])
    ], LinkDirective);
LinkDirective.ɵfac = function LinkDirective_Factory(t) { return new (t || LinkDirective)(ɵngcc0.ɵɵdirectiveInject(LinkHandler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLinkWithHref, 8)); };
LinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LinkDirective, selectors: [["", "routerLink", ""]], inputs: { routerLink: "routerLink" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LinkDirective, [{
        type: Directive,
        args: [{
                selector: '[routerLink]'
            }]
    }], function () { return [{ type: Array, decorators: [{
                type: Inject,
                args: [LinkHandler]
            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.RouterLink, decorators: [{
                type: Optional
            }] }, { type: ɵngcc1.RouterLinkWithHref, decorators: [{
                type: Optional
            }] }]; }, { routerLink: [{
            type: Input
        }] }); })();
    return LinkDirective;
}());
export { LinkDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtcXVpY2tsaW5rL3NyYy9saW5rLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsUUFBUSxFQUNSLE1BQU0sRUFHTixLQUFLLEVBRU4sTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFVBQVUsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBTXJEO0FBQWlELElBSy9DLHVCQUMrQixZQUFtQyxFQUN4RCxFQUFjLEVBQ1YsSUFBZ0IsRUFDaEIsWUFBZ0M7QUFDN0MsUUFKOEIsaUJBQVksR0FBWixZQUFZLENBQXVCO0FBQUMsUUFDekQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBSXZCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQWIsQ0FBYSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDNUUsUUFBSSxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksSUFBSSxZQUFZLENBQUM7QUFDbkMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxtQ0FBVyxHQUFYLFVBQVksQ0FBZ0I7QUFDOUIsUUFBSSxJQUFJLENBQUMsQ0FBQyxVQUFVLEVBQUU7QUFDdEIsWUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN4QyxZQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFFSCxJQUFFLG1DQUFXLEdBQVg7QUFBYyxRQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RDLElBQUUsQ0FBQztBQUVILElBQUUsc0JBQUksa0NBQU87QUFBSSxhQUFmO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDO0FBQ2pDLFFBQUUsQ0FBQztBQUVIO0FBQ0c7QUFDRCxPQUpDO0FBQ0gsSUFDRSxzQkFBSSxrQ0FBTztBQUFJLGFBQWY7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUM7QUFDM0IsUUFBRSxDQUFDO0FBQ0Y7QUFDd0I7QUFBMkIsT0FGakQ7QUFDSCxJQWhDVztBQUFxQixRQUE3QixLQUFLLEVBQUU7QUFBRTtBQUFrRCxxREFBMkI7QUFDeEYsSUFGWSxhQUFhLGdDQUh6QixTQUFTLENBQUMsY0FDVCxRQUFRLHpDQUVGLENBTUgsbUJBQUEsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0NBUlosY0FBYyxVQUN6QixDQUFDLDFCQU93QixRQUVyQixtQkFBQSxRQUFRLEVBQUUsQ0FBQTtBQUFFLFFBQ1osbUJBQUEsUUFBUSxFQUFFLENBQUE7QUFBRSx3REFGRCxVQUFVO0FBQzFCLFlBQXNCLFVBQVU7QUFDaEMsWUFBOEIsa0JBQWtCO0FBQzlDLE9BVlcsYUFBYSxDQWlDekI7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsSUFERCxvQkFBQztBQUNBLENBREEsQUFqQ0QsSUFpQ0M7QUFDRCxTQWxDYSxhQUFhO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIE9wdGlvbmFsLFxuICBJbmplY3QsXG4gIE9uQ2hhbmdlcyxcbiAgT25EZXN0cm95LFxuICBJbnB1dCxcbiAgU2ltcGxlQ2hhbmdlc1xufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlckxpbmssIFJvdXRlckxpbmtXaXRoSHJlZiB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBMaW5rSGFuZGxlciB9IGZyb20gJy4vbGluay1oYW5kbGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTGlua0hhbmRsZXJTdHJhdGVneSB9IGZyb20gJy4vbGluay1oYW5kbGVyLXN0cmF0ZWd5JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3JvdXRlckxpbmtdJ1xufSlcbmV4cG9ydCBjbGFzcyBMaW5rRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSByb3V0ZXJMaW5rOiBQaWNrPFJvdXRlckxpbmsgfCBSb3V0ZXJMaW5rV2l0aEhyZWYsICdyb3V0ZXJMaW5rJz5bJ3JvdXRlckxpbmsnXTtcbiAgcHJpdmF0ZSBybDogUm91dGVyTGluayB8IFJvdXRlckxpbmtXaXRoSHJlZjtcbiAgcHJpdmF0ZSBsaW5rSGFuZGxlcjogTGlua0hhbmRsZXJTdHJhdGVneTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KExpbmtIYW5kbGVyKSBwcml2YXRlIGxpbmtIYW5kbGVyczogTGlua0hhbmRsZXJTdHJhdGVneVtdLFxuICAgIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsXG4gICAgQE9wdGlvbmFsKCkgbGluazogUm91dGVyTGluayxcbiAgICBAT3B0aW9uYWwoKSBsaW5rV2l0aEhyZWY6IFJvdXRlckxpbmtXaXRoSHJlZlxuICApIHtcbiAgICB0aGlzLmxpbmtIYW5kbGVyID0gdGhpcy5saW5rSGFuZGxlcnMuZmlsdGVyKGggPT4gaC5zdXBwb3J0ZWQoKSkuc2hpZnQoKTtcbiAgICB0aGlzLnJsID0gbGluayB8fCBsaW5rV2l0aEhyZWY7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGMucm91dGVyTGluaykge1xuICAgICAgdGhpcy5saW5rSGFuZGxlci51bnJlZ2lzdGVyKHRoaXMpO1xuICAgICAgdGhpcy5saW5rSGFuZGxlci5yZWdpc3Rlcih0aGlzKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmxpbmtIYW5kbGVyLnVucmVnaXN0ZXIodGhpcyk7XG4gIH1cblxuICBnZXQgZWxlbWVudCgpOiBFbGVtZW50IHtcbiAgICByZXR1cm4gdGhpcy5lbC5uYXRpdmVFbGVtZW50O1xuICB9XG5cbiAgZ2V0IHVybFRyZWUoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5ybC51cmxUcmVlO1xuICB9XG59XG4iXX0=