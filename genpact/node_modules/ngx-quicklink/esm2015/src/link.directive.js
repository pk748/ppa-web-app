import * as tslib_1 from "tslib";
import { Directive, ElementRef, Optional, Inject, Input } from '@angular/core';
import { RouterLink, RouterLinkWithHref } from '@angular/router';
import { LinkHandler } from './link-handler.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
let LinkDirective = class LinkDirective {
    constructor(linkHandlers, el, link, linkWithHref) {
        this.linkHandlers = linkHandlers;
        this.el = el;
        this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();
        this.rl = link || linkWithHref;
    }
    ngOnChanges(c) {
        if (c.routerLink) {
            this.linkHandler.unregister(this);
            this.linkHandler.register(this);
        }
    }
    ngOnDestroy() {
        this.linkHandler.unregister(this);
    }
    get element() {
        return this.el.nativeElement;
    }
    get urlTree() {
        return this.rl.urlTree;
    }
};
LinkDirective.ɵfac = function LinkDirective_Factory(t) { return new (t || LinkDirective)(ɵngcc0.ɵɵdirectiveInject(LinkHandler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RouterLinkWithHref, 8)); };
LinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LinkDirective, selectors: [["", "routerLink", ""]], inputs: { routerLink: "routerLink" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], LinkDirective.prototype, "routerLink", void 0);
LinkDirective = tslib_1.__decorate([ tslib_1.__param(0, Inject(LinkHandler)),
    tslib_1.__param(2, Optional()),
    tslib_1.__param(3, Optional()),
    tslib_1.__metadata("design:paramtypes", [Array, ElementRef,
        RouterLink,
        RouterLinkWithHref])
], LinkDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LinkDirective, [{
        type: Directive,
        args: [{
                selector: '[routerLink]'
            }]
    }], function () { return [{ type: Array, decorators: [{
                type: Inject,
                args: [LinkHandler]
            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.RouterLink, decorators: [{
                type: Optional
            }] }, { type: ɵngcc1.RouterLinkWithHref, decorators: [{
                type: Optional
            }] }]; }, { routerLink: [{
            type: Input
        }] }); })();
export { LinkDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtcXVpY2tsaW5rL3NyYy9saW5rLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsUUFBUSxFQUNSLE1BQU0sRUFHTixLQUFLLEVBRU4sTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFVBQVUsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBTXJELElBQWEsYUFBYSxHQUExQixNQUFhLGFBQWE7QUFBRyxJQUszQixZQUMrQixZQUFtQyxFQUN4RCxFQUFjLEVBQ1YsSUFBZ0IsRUFDaEIsWUFBZ0M7QUFDN0MsUUFKOEIsaUJBQVksR0FBWixZQUFZLENBQXVCO0FBQUMsUUFDekQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBSXZCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUM1RSxRQUFJLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxJQUFJLFlBQVksQ0FBQztBQUNuQyxJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVcsQ0FBQyxDQUFnQjtBQUM5QixRQUFJLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRTtBQUN0QixZQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3hDLFlBQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdEMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNILElBQ0UsV0FBVztBQUNiLFFBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDdEMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLE9BQU87QUFBSyxRQUNkLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUM7QUFDakMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLE9BQU87QUFBSyxRQUNkLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUM7QUFDM0IsSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7MkxBQUE7QUFoQ1U7QUFBcUIsSUFBN0IsS0FBSyxFQUFFO0FBQUU7QUFBOEMsaURBQStCO0FBRDVFLGFBQWEsNEJBSHpCLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxuQ0FFUixDQU1DLG1CQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtPQVJFLE1BQ3pCLENBQUMsZEFPd0IsSUFFckIsbUJBQUEsUUFBUSxFQUFFLENBQUE7QUFBRSxJQUNaLG1CQUFBLFFBQVEsRUFBRSxDQUFBO0FBQUUsb0RBRkQsVUFBVTtBQUMxQixRQUFzQixVQUFVO0FBQ2hDLFFBQThCLGtCQUFrQjtBQUM5QyxHQVZXLGFBQWEsQ0FpQ3pCOzs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQWxDWSxhQUFhO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIE9wdGlvbmFsLFxuICBJbmplY3QsXG4gIE9uQ2hhbmdlcyxcbiAgT25EZXN0cm95LFxuICBJbnB1dCxcbiAgU2ltcGxlQ2hhbmdlc1xufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlckxpbmssIFJvdXRlckxpbmtXaXRoSHJlZiB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBMaW5rSGFuZGxlciB9IGZyb20gJy4vbGluay1oYW5kbGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTGlua0hhbmRsZXJTdHJhdGVneSB9IGZyb20gJy4vbGluay1oYW5kbGVyLXN0cmF0ZWd5JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3JvdXRlckxpbmtdJ1xufSlcbmV4cG9ydCBjbGFzcyBMaW5rRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSByb3V0ZXJMaW5rOiBQaWNrPFJvdXRlckxpbmsgfCBSb3V0ZXJMaW5rV2l0aEhyZWYsICdyb3V0ZXJMaW5rJz5bJ3JvdXRlckxpbmsnXTtcbiAgcHJpdmF0ZSBybDogUm91dGVyTGluayB8IFJvdXRlckxpbmtXaXRoSHJlZjtcbiAgcHJpdmF0ZSBsaW5rSGFuZGxlcjogTGlua0hhbmRsZXJTdHJhdGVneTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KExpbmtIYW5kbGVyKSBwcml2YXRlIGxpbmtIYW5kbGVyczogTGlua0hhbmRsZXJTdHJhdGVneVtdLFxuICAgIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsXG4gICAgQE9wdGlvbmFsKCkgbGluazogUm91dGVyTGluayxcbiAgICBAT3B0aW9uYWwoKSBsaW5rV2l0aEhyZWY6IFJvdXRlckxpbmtXaXRoSHJlZlxuICApIHtcbiAgICB0aGlzLmxpbmtIYW5kbGVyID0gdGhpcy5saW5rSGFuZGxlcnMuZmlsdGVyKGggPT4gaC5zdXBwb3J0ZWQoKSkuc2hpZnQoKTtcbiAgICB0aGlzLnJsID0gbGluayB8fCBsaW5rV2l0aEhyZWY7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGMucm91dGVyTGluaykge1xuICAgICAgdGhpcy5saW5rSGFuZGxlci51bnJlZ2lzdGVyKHRoaXMpO1xuICAgICAgdGhpcy5saW5rSGFuZGxlci5yZWdpc3Rlcih0aGlzKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmxpbmtIYW5kbGVyLnVucmVnaXN0ZXIodGhpcyk7XG4gIH1cblxuICBnZXQgZWxlbWVudCgpOiBFbGVtZW50IHtcbiAgICByZXR1cm4gdGhpcy5lbC5uYXRpdmVFbGVtZW50O1xuICB9XG5cbiAgZ2V0IHVybFRyZWUoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5ybC51cmxUcmVlO1xuICB9XG59XG4iXX0=