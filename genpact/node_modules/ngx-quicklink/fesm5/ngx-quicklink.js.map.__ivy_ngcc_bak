{"version":3,"file":"ngx-quicklink.js","sources":["ng://ngx-quicklink/src/prefetch-registry.service.ts","ng://ngx-quicklink/src/link-handler.service.ts","ng://ngx-quicklink/src/link.directive.ts","ng://ngx-quicklink/src/quicklink-strategy.service.ts","ng://ngx-quicklink/src/quicklink.module.ts"],"sourcesContent":["import {\n  Router,\n  UrlTree,\n  Params,\n  UrlSegmentGroup,\n  UrlSegment,\n  PRIMARY_OUTLET\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n// Using a global registry so we can keep it populated across lazy-loaded\n// modules with different parent injectors which create instance of the registry.\nconst globalRegistry: UrlTree[] = [];\n\n@Injectable()\nexport class PrefetchRegistry {\n  private trees: UrlTree[] = globalRegistry;\n  constructor(private router: Router) {}\n\n  add(tree: UrlTree) {\n    this.trees.push(tree);\n  }\n\n  remove(tree: UrlTree) {\n    this.trees.splice(this.trees.indexOf(tree), 1);\n  }\n\n  shouldPrefetch(url: string) {\n    const tree = this.router.parseUrl(url);\n    return this.trees.some(containsTree.bind(null, tree));\n  }\n}\n\nfunction containsQueryParams(container: Params, containee: Params): boolean {\n  // TODO: This does not handle array params correctly.\n  return (\n    Object.keys(containee).length <= Object.keys(container).length &&\n    Object.keys(containee).every(key => containee[key] === container[key])\n  );\n}\n\nfunction containsTree(containee: UrlTree, container: UrlTree): boolean {\n  return (\n    containsQueryParams(container.queryParams, containee.queryParams) &&\n    containsSegmentGroup(container.root, containee.root, containee.root.segments)\n  );\n}\n\nfunction containsSegmentGroup(\n  container: UrlSegmentGroup,\n  containee: UrlSegmentGroup,\n  containeePaths: UrlSegment[]\n): boolean {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!containee.hasChildren()) return true;\n\n    for (const c in containee.children) {\n      if (!container.children[c]) break;\n      if (\n        containsSegmentGroup(\n          container.children[c],\n          containee.children[c],\n          containee.children[c].segments\n        )\n      )\n        return true;\n    }\n    return false;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroup(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\n\nexport function equalPath(as: UrlSegment[], bs: UrlSegment[]): boolean {\n  if (as.length !== bs.length) return false;\n  return as.every(\n    (a, i) => a.path === bs[i].path || a.path.startsWith(':') || bs[i].path.startsWith(':')\n  );\n}\n","import { Injectable, InjectionToken, NgZone } from '@angular/core';\nimport { LinkDirective } from './link.directive';\nimport { RouterPreloader } from '@angular/router';\nimport { LinkHandlerStrategy } from './link-handler-strategy';\nimport { PrefetchRegistry } from './prefetch-registry.service';\n\ntype RequestIdleCallbackHandle = any;\ntype RequestIdleCallbackOptions = {\n  timeout: number;\n};\ntype RequestIdleCallbackDeadline = {\n  readonly didTimeout: boolean;\n  timeRemaining: (() => number);\n};\n\ntype RequestIdleCallback = ((\n  callback: ((deadline: RequestIdleCallbackDeadline) => void),\n  opts?: RequestIdleCallbackOptions\n) => RequestIdleCallbackHandle);\n\nconst requestIdleCallback: RequestIdleCallback =\n  typeof window !== 'undefined'\n    ? (window as any).requestIdleCallback ||\n      function(cb: Function) {\n        const start = Date.now();\n        return setTimeout(function() {\n          cb({\n            didTimeout: false,\n            timeRemaining: function() {\n              return Math.max(0, 50 - (Date.now() - start));\n            }\n          });\n        }, 1);\n      }\n    : () => {};\n\nconst observerSupported = () =>\n  typeof window !== 'undefined' ? !!(window as any).IntersectionObserver : false;\n\nexport const LinkHandler = new InjectionToken('LinkHandler');\n\n@Injectable()\nexport class ObservableLinkHandler implements LinkHandlerStrategy {\n  private elementLink = new Map<Element, LinkDirective>();\n  private observer: IntersectionObserver | null = observerSupported()\n    ? new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const link = entry.target as HTMLAnchorElement;\n\n            const routerLink = this.elementLink.get(link);\n            if ( !routerLink || !routerLink.urlTree ) return;\n\n            this.queue.add(routerLink.urlTree);\n            this.observer.unobserve(link);\n            requestIdleCallback(() => {\n              this.loader.preload().subscribe(() => void 0);\n              this.queue.remove(routerLink.urlTree);\n            });\n          }\n        });\n      })\n    : null;\n\n  constructor(private loader: RouterPreloader, private queue: PrefetchRegistry, private ngZone: NgZone) {}\n\n  register(el: LinkDirective) {\n    this.elementLink.set(el.element, el);\n    this.ngZone.runOutsideAngular(() => {\n      this.observer.observe(el.element);\n    });\n  }\n\n  // First call to unregister will not hit this.\n  unregister(el: LinkDirective) {\n    if (this.elementLink.has(el.element)) {\n      this.observer.unobserve(el.element);\n      this.elementLink.delete(el.element);\n    }\n  }\n\n  supported() {\n    return observerSupported();\n  }\n}\n\n@Injectable()\nexport class PreloadLinkHandler implements LinkHandlerStrategy {\n  constructor(private loader: RouterPreloader, private queue: PrefetchRegistry) {}\n\n  register(el: LinkDirective) {\n    this.queue.add(el.urlTree);\n    requestIdleCallback(() => this.loader.preload().subscribe(() => void 0));\n  }\n\n  unregister(_: LinkDirective) {}\n\n  supported() {\n    return true;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Optional,\n  Inject,\n  OnChanges,\n  OnDestroy,\n  Input,\n  SimpleChanges\n} from '@angular/core';\nimport { RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { LinkHandler } from './link-handler.service';\nimport { LinkHandlerStrategy } from './link-handler-strategy';\n\n@Directive({\n  selector: '[routerLink]'\n})\nexport class LinkDirective implements OnChanges, OnDestroy {\n  @Input() routerLink: Pick<RouterLink | RouterLinkWithHref, 'routerLink'>['routerLink'];\n  private rl: RouterLink | RouterLinkWithHref;\n  private linkHandler: LinkHandlerStrategy;\n\n  constructor(\n    @Inject(LinkHandler) private linkHandlers: LinkHandlerStrategy[],\n    private el: ElementRef,\n    @Optional() link: RouterLink,\n    @Optional() linkWithHref: RouterLinkWithHref\n  ) {\n    this.linkHandler = this.linkHandlers.filter(h => h.supported()).shift();\n    this.rl = link || linkWithHref;\n  }\n\n  ngOnChanges(c: SimpleChanges) {\n    if (c.routerLink) {\n      this.linkHandler.unregister(this);\n      this.linkHandler.register(this);\n    }\n  }\n\n  ngOnDestroy() {\n    this.linkHandler.unregister(this);\n  }\n\n  get element(): Element {\n    return this.el.nativeElement;\n  }\n\n  get urlTree(): any {\n    return this.rl.urlTree;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Router, Route, PRIMARY_OUTLET } from '@angular/router';\nimport { PrefetchRegistry } from './prefetch-registry.service';\nimport { EMPTY } from 'rxjs';\n\n@Injectable()\nexport class QuicklinkStrategy implements PreloadingStrategy {\n  loading = new Set<Route>();\n\n  constructor(private queue: PrefetchRegistry, private router: Router) {}\n\n  preload(route: Route, load: Function) {\n    if (this.loading.has(route)) {\n      // Don't preload the same route twice\n      return EMPTY;\n    }\n    const conn = typeof window !== 'undefined' ? (navigator as any).connection : undefined;\n    if (conn) {\n      // Don't preload if the user is on 2G. or if Save-Data is enabled..\n      if ((conn.effectiveType || '').includes('2g') || conn.saveData) return EMPTY;\n    }\n    // Prevent from preloading\n    if (route.data && route.data.preload === false) {\n      return EMPTY;\n    }\n    const fullPath = findPath(this.router.config, route);\n    if (this.queue.shouldPrefetch(fullPath)) {\n      this.loading.add(route);\n      return load();\n    }\n\n    return EMPTY;\n  }\n}\n\nconst findPath = (config: Route[], route: Route): string => {\n  config = config.slice();\n  const parent = new Map<Route, Route>();\n  const visited = new Set<Route>();\n  while (config.length) {\n    const el = config.shift();\n    visited.add(el);\n    if (el === route) break;\n    let children = el.children || [];\n    const current = (el as any)._loadedConfig;\n    if (current && current.routes) {\n      children = children.concat(current.routes);\n    }\n    children.forEach((r: Route) => {\n      if (visited.has(r)) return;\n      parent.set(r, el);\n      config.push(r);\n    });\n  }\n  let path = '';\n  let current = route;\n\n  while (current) {\n    if (isPrimaryRoute(current)) {\n      path = `/${current.path}${path}`;\n    } else {\n      path = `/(${current.outlet}:${current.path}${path})`;\n    }\n    current = parent.get(current);\n  }\n\n  return path;\n};\n\nfunction isPrimaryRoute(route: Route) {\n  return route.outlet === PRIMARY_OUTLET || !route.outlet;\n}\n","import { NgModule } from '@angular/core';\nimport { LinkDirective } from './link.directive';\nimport { ObservableLinkHandler, PreloadLinkHandler, LinkHandler } from './link-handler.service';\nimport { PrefetchRegistry } from './prefetch-registry.service';\nimport { QuicklinkStrategy } from './quicklink-strategy.service';\n\n@NgModule({\n  declarations: [LinkDirective],\n  providers: [\n    {\n      provide: LinkHandler,\n      useClass: ObservableLinkHandler,\n      multi: true\n    },\n    {\n      provide: LinkHandler,\n      useClass: PreloadLinkHandler,\n      multi: true\n    },\n    PrefetchRegistry,\n    QuicklinkStrategy\n  ],\n  exports: [LinkDirective]\n})\nexport class QuicklinkModule {}\n"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}