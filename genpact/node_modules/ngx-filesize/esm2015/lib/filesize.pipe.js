/**
 * @fileoverview added by tsickle
 * Generated from: lib/filesize.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import * as filesize_ from 'filesize';
import * as ɵngcc0 from '@angular/core';
export class FileSizePipe {
    /**
     * @private
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */
    static transformOne(value, options) {
        /** @type {?} */
        const filesize = filesize_;
        return filesize(value, options);
    }
    /**
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */
    transform(value, options) {
        if (Array.isArray(value)) {
            return value.map((/**
             * @param {?} val
             * @return {?}
             */
            val => FileSizePipe.transformOne(val, options)));
        }
        return FileSizePipe.transformOne(value, options);
    }
}
FileSizePipe.ɵfac = function FileSizePipe_Factory(t) { return new (t || FileSizePipe)(); };
FileSizePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "filesize", type: FileSizePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileSizePipe, [{
        type: Pipe,
        args: [{
                name: 'filesize'
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXNpemUucGlwZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWZpbGVzaXplL3NyYy9saWIvZmlsZXNpemUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sS0FBSyxTQUFTLE1BQU0sVUFBVSxDQUFDOztBQUt0QyxNQUFNLE9BQU8sWUFBWTtBQUFHO0FBQVE7QUFBZ0I7QUFDN0I7QUFBMkI7QUFBbUI7QUFDOUQsSUFERyxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQWEsRUFBRSxPQUFhO0FBQUk7QUFDN0MsY0FBUCxRQUFRLEdBQUcsU0FBUztBQUM5QixRQUFJLE9BQU8sUUFBUSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNwQyxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQXdCO0FBQzVCO0FBQW1CO0FBQVEsSUFENUIsU0FBUyxDQUFDLEtBQXdCLEVBQUUsT0FBYTtBQUNuRCxRQUFJLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUM5QixZQUFNLE9BQU8sS0FBSyxDQUFDLEdBQUc7QUFBTTtBQUE4QjtBQUdwRDtBQUFnQixZQUhDLEdBQUcsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQUMsQ0FBQztBQUN2RSxTQUFLO0FBQ0wsUUFDSSxPQUFPLFlBQVksQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3JELElBQUUsQ0FBQztBQUNIO3dDQWhCQyxJQUFJLFNBQUMsa0JBQ0osSUFBSSxFQUFFLFVBQVU7U0FDakI7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgZmlsZXNpemVfIGZyb20gJ2ZpbGVzaXplJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZmlsZXNpemUnXG59KVxuZXhwb3J0IGNsYXNzIEZpbGVTaXplUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBwcml2YXRlIHN0YXRpYyB0cmFuc2Zvcm1PbmUodmFsdWU6IG51bWJlciwgb3B0aW9ucz86IGFueSk6IHN0cmluZyB7XG4gICAgY29uc3QgZmlsZXNpemUgPSBmaWxlc2l6ZV87XG4gICAgcmV0dXJuIGZpbGVzaXplKHZhbHVlLCBvcHRpb25zKTtcbiAgfVxuXG4gIHRyYW5zZm9ybSh2YWx1ZTogbnVtYmVyIHwgbnVtYmVyW10sIG9wdGlvbnM/OiBhbnkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5tYXAodmFsID0+IEZpbGVTaXplUGlwZS50cmFuc2Zvcm1PbmUodmFsLCBvcHRpb25zKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIEZpbGVTaXplUGlwZS50cmFuc2Zvcm1PbmUodmFsdWUsIG9wdGlvbnMpO1xuICB9XG59XG4iXX0=