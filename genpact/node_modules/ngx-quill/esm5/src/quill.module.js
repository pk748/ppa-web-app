import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { defaultModules } from './quill-defaults';
import { QuillEditorComponent } from './quill-editor.component';
import { QUILL_CONFIG_TOKEN } from './quill-editor.interfaces';
import * as ɵngcc0 from '@angular/core';
var ɵ0 = { modules: defaultModules };
var QuillModule = /** @class */ (function () {
    function QuillModule() {
    }
    QuillModule_1 = QuillModule;
    QuillModule.forRoot = function (config) {
        return {
            ngModule: QuillModule_1,
            providers: [
                {
                    provide: QUILL_CONFIG_TOKEN,
                    // tslint:disable-next-line:only-arrow-functions
                    useValue: config || { modules: defaultModules }
                }
            ]
        };
    };
    var QuillModule_1;
QuillModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });
QuillModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QuillModule_Factory(t) { return new (t || QuillModule)(); }, providers: [
        {
            provide: QUILL_CONFIG_TOKEN,
            useValue: ɵ0
        }
    ], imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent]; }, exports: function () { return [QuillEditorComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    QuillEditorComponent
                ],
                exports: [QuillEditorComponent],
                imports: [],
                providers: [
                    {
                        provide: QUILL_CONFIG_TOKEN,
                        useValue: ɵ0
                    }
                ]
            }]
    }], function () { return []; }, null); })();
    return QuillModule;
}());
export { QuillModule };
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpbGwubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovbmd4LXF1aWxsL3NyYy9xdWlsbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBRTdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQTtBQUMvRCxPQUFPLEVBQUUsa0JBQWtCLEVBQWUsTUFBTSwyQkFBMkIsQ0FBQTs7QUFDM0UsU0FVZ0IsRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFO0FBSTNDO0FBQ29CLElBRHBCO0FBQXlCLElBYXpCLENBQUM7QUFDRCxvQkFkYSxXQUFXO0FBQUUsSUFDakIsbUJBQU8sR0FBZCxVQUFlLE1BQW9CO0FBQUksUUFDckMsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLGFBQVc7QUFDM0IsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsa0JBQWtCO0FBQ3JDLG9CQUFVLGdEQUFnRDtBQUMxRCxvQkFBVSxRQUFRLEVBQUUsTUFBTSxJQUFJLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRTtBQUN6RCxpQkFBUztBQUNULGFBQU87QUFDUCxTQUFLLENBQUE7QUFDTCxJQUFFLENBQUM7QUFDRjtJQWJZLFdBQVcsZ0RBYnZCO0lBQVEsQ0FBQyxjQUNSLFlBQVksRUFBRSxrQkFDWixvQkFBb0IsY0FDckIsY0FDRCxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztPQUMvQjtJQUFPLEVBQUUsRUFBRSxjQUNYLFNBQVMsRUFBRTtVQUNUO09BQ0U7SUFBTyxFQUFFLGtCQUFrQjtxQkFDM0IsUUFBUSxJQUE2QixrQkFDdEMsY0FDRixVQUNGLENBQUMsUUFDVyxXQUFXLENBYXZCOzs7Ozs7Ozs7Ozs7Ozs7O2dEQUNEO0FBQUMsSUFERCxrQkFBQztBQUNBLENBREEsQUFiRCxJQWFDO0FBQ0QsU0FkYSxXQUFXO0FBQ3ZCO0FBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5cbmltcG9ydCB7IGRlZmF1bHRNb2R1bGVzIH0gZnJvbSAnLi9xdWlsbC1kZWZhdWx0cydcbmltcG9ydCB7IFF1aWxsRWRpdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9xdWlsbC1lZGl0b3IuY29tcG9uZW50J1xuaW1wb3J0IHsgUVVJTExfQ09ORklHX1RPS0VOLCBRdWlsbENvbmZpZyB9IGZyb20gJy4vcXVpbGwtZWRpdG9yLmludGVyZmFjZXMnXG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFF1aWxsRWRpdG9yQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtRdWlsbEVkaXRvckNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBRVUlMTF9DT05GSUdfVE9LRU4sXG4gICAgICB1c2VWYWx1ZTogeyBtb2R1bGVzOiBkZWZhdWx0TW9kdWxlcyB9XG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFF1aWxsTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogUXVpbGxDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFF1aWxsTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBRVUlMTF9DT05GSUdfVE9LRU4sXG4gICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm9ubHktYXJyb3ctZnVuY3Rpb25zXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZyB8fMKge8KgbW9kdWxlczogZGVmYXVsdE1vZHVsZXMgfVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICB9XG59XG4iXX0=