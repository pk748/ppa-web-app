import * as tslib_1 from "tslib";
import * as ɵngcc0 from '@angular/core';
var QuillModule_1;
import { NgModule } from '@angular/core';
import { defaultModules } from './quill-defaults';
import { QuillEditorComponent } from './quill-editor.component';
import { QUILL_CONFIG_TOKEN } from './quill-editor.interfaces';
const ɵ0 = { modules: defaultModules };
let QuillModule = QuillModule_1 = class QuillModule {
    static forRoot(config) {
        return {
            ngModule: QuillModule_1,
            providers: [
                {
                    provide: QUILL_CONFIG_TOKEN,
                    // tslint:disable-next-line:only-arrow-functions
                    useValue: config || { modules: defaultModules }
                }
            ]
        };
    }
};
QuillModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });
QuillModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QuillModule_Factory(t) { return new (t || QuillModule)(); }, providers: [
        {
            provide: QUILL_CONFIG_TOKEN,
            useValue: ɵ0
        }
    ], imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent]; }, exports: function () { return [QuillEditorComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    QuillEditorComponent
                ],
                exports: [QuillEditorComponent],
                imports: [],
                providers: [
                    {
                        provide: QUILL_CONFIG_TOKEN,
                        useValue: ɵ0
                    }
                ]
            }]
    }], null, null); })();
export { QuillModule };
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpbGwubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZzovbmd4LXF1aWxsL3NyYy9xdWlsbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFFN0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQ2pELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBQy9ELE9BQU8sRUFBRSxrQkFBa0IsRUFBZSxNQUFNLDJCQUEyQixDQUFBO0FBQzNFLFdBVWdCLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRTtBQUkzQyxJQUFhLFdBQVcsbUJBQXhCLE1BQWEsV0FBVztBQUN4QixJQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBb0I7QUFBSSxRQUNyQyxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsYUFBVztBQUMzQixZQUFNLFNBQVMsRUFBRTtBQUNqQixnQkFBUTtBQUNSLG9CQUFVLE9BQU8sRUFBRSxrQkFBa0I7QUFDckMsb0JBQVUsZ0RBQWdEO0FBQzFELG9CQUFVLFFBQVEsRUFBRSxNQUFNLElBQUksRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFO0FBQ3pELGlCQUFTO0FBQ1QsYUFBTztBQUNQLFNBQUssQ0FBQTtBQUNMLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQWJZLFdBQVcsNENBYnZCLFFBQVEsQ0FBQztPQUNSLFlBQVksRUFBRSxjQUNaLG9CQUFvQixVQUNyQixVQUNELE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDLFVBQy9CLE9BQU8sRUFBRSxFQUFFO0FBQ1gsU0FBUztDQUFFLGNBQ1Qsa0JBQ0UsT0FBTztDQUFFLGtCQUFrQjs7RUFDM0IsUUFBUSxJQUE2QjtHQUN0QyxVQUNGLE1BQ0YsQ0FBQyxJQUNXLFdBQVcsQ0FhdkI7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0Q7QUFBQyxTQWRZLFdBQVc7QUFDdkI7QUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSdcblxuaW1wb3J0IHsgZGVmYXVsdE1vZHVsZXMgfSBmcm9tICcuL3F1aWxsLWRlZmF1bHRzJ1xuaW1wb3J0IHsgUXVpbGxFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL3F1aWxsLWVkaXRvci5jb21wb25lbnQnXG5pbXBvcnQgeyBRVUlMTF9DT05GSUdfVE9LRU4sIFF1aWxsQ29uZmlnIH0gZnJvbSAnLi9xdWlsbC1lZGl0b3IuaW50ZXJmYWNlcydcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUXVpbGxFZGl0b3JDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1F1aWxsRWRpdG9yQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IFFVSUxMX0NPTkZJR19UT0tFTixcbiAgICAgIHVzZVZhbHVlOiB7IG1vZHVsZXM6IGRlZmF1bHRNb2R1bGVzIH1cbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUXVpbGxNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChjb25maWc/OiBRdWlsbENvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogUXVpbGxNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFFVSUxMX0NPTkZJR19UT0tFTixcbiAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6b25seS1hcnJvdy1mdW5jdGlvbnNcbiAgICAgICAgICB1c2VWYWx1ZTogY29uZmlnIHx8wqB7wqBtb2R1bGVzOiBkZWZhdWx0TW9kdWxlcyB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9XG4gIH1cbn1cbiJdfQ==