{"version":3,"file":"ngx-infinite-scroll.umd.js","sources":["../../src/services/ngx-ins-utils.ts","../../src/services/axis-resolver.ts","../../src/services/event-trigger.ts","../../src/services/position-resolver.ts","../../src/services/scroll-resolver.ts","../../src/services/scroll-register.ts","../../src/modules/infinite-scroll.directive.ts","../../src/modules/ngx-infinite-scroll.module.ts"],"names":["map","pairwise","tap","mergeMap","of","ScrollResolver.updateScrollState","filter","ScrollResolver.isTriggeredScroll","ScrollResolver.updateTriggeredFlag","fromEvent","sampleTime","EventEmitter","Directive","ElementRef","NgZone","Output","Input","NgModule"],"mappings":";;;;;;;;;;;;;;;;;AAEA,SAAA,uBAAA,CACE,QAAsB,EACtB,YAAY,EACZ,cAAc,EACd,QAAiB,EAJnB;AAAE;AAAqB,IAMrB,IAAM,SAAS,GAAG,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC;AACnF;AAAqB,IAAnB,IAAI,SAAS,GAAG,SAAS,IAAI,YAAY,GAAG,MAAM,GAAG,cAAc,CAAC;AACtE,IAAE,IAAI,QAAQ,EAAE;AAChB;AAAyB,QAArB,IAAM,iBAAiB,GACrB,QAAQ,IAAI,SAAS,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC;AAC5D,QAAI,SAAS,GAAG,iBAAiB;AACjC,cAAQ,WAAW,CAAC,QAAQ,EAAE,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC;AACrE,cAAQ,QAAQ,CAAC;AACjB,QAAI,IAAI,CAAC,SAAS,EAAE;AACpB,YAAM,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;AACvF,SAAK;AACL,KAAG;AACH,IAAE,OAAO,SAAS,CAAC;AACnB,CAAC;AACD;AACG;AAAuB;AACJ;AACH;AACjB;AAHF,SAAA,WAAA,CACE,QAAsB,EACtB,UAA4B,EAC5B,QAAiB,EAHnB;AAAE;AAAqB,IAKrB,IAAM,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC;AACzD,IAAE,OAAO,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxC,CAAC;AACD;AACG;AAAmB;AAAe;AAArC,SAAA,gBAAA,CAAiC,IAAkB,EAAnD;AAAE,IACA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;AACnC,CAAC;AACD;AACG;AAAe;AAAlB,SAAA,gBAAA,GAAA;AAAE,IACA,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;AACvC,CAAC;AACD;AAAI;AAAkC;AAAkE;AAAI;ACvC5G,IAAM,aAAa,GAAG;AACtB,IAAE,YAAY,EAAE,cAAc;AAC9B,IAAE,YAAY,EAAE,cAAc;AAC9B,IAAE,YAAY,EAAE,cAAc;AAC9B,IAAE,WAAW,EAAE,aAAa;AAC5B,IAAE,SAAS,EAAE,WAAW;AACxB,IAAE,SAAS,EAAE,WAAW;AACxB,IAAE,GAAG,EAAE,KAAK;AACZ,CAAC,CAAC;AACF;AACA,IAAM,eAAe,GAAG;AACxB,IAAE,YAAY,EAAE,aAAa;AAC7B,IAAE,YAAY,EAAE,aAAa;AAC7B,IAAE,YAAY,EAAE,aAAa;AAC7B,IAAE,WAAW,EAAE,aAAa;AAC5B,IAAE,SAAS,EAAE,YAAY;AACzB,IAAE,SAAS,EAAE,YAAY;AACzB,IAAE,GAAG,EAAE,MAAM;AACb,CAAC,CAAC;AAEF,IAAA,YAAA,kBAAA,YAAA;AAAE;AAAQ;AACA;AAAQ,IAEhB,SAAF,YAAA,CAAsB,QAAwB,EAA9C;AAAE,QAAoB,IAAtB,QAAA,KAAA,KAAA,CAAA,EAAsB,EAAA,QAAtB,GAAA,IAA8C,CAA9C,EAAA;AAAC,QAAqB,IAAtB,CAAA,QAA8B,GAAR,QAAQ,CAAgB;AAAC,QAC3C,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,aAAa,GAAG,eAAe,CAAC;AAC/D,KAAG;AACH;AAAQ;AACH;AAAQ,IADX,YAAF,CAAA,SAAA,CAAA,eAAiB,GAAf,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;AACtC,KAAG,CAAH;AAAC;AACI;AACH;AAAQ,IADR,YAAF,CAAA,SAAA,CAAA,eAAiB,GAAf,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;AACtC,KAAG,CAAH;AAAC;AACI;AACH;AAAQ,IADR,YAAF,CAAA,SAAA,CAAA,eAAiB,GAAf,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;AACtC,KAAG,CAAH;AAAC;AACI;AACF;AAAQ,IADT,YAAF,CAAA,SAAA,CAAA,cAAgB,GAAd,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;AACrC,KAAG,CAAH;AAAC;AACI;AACA;AAAQ,IADX,YAAF,CAAA,SAAA,CAAA,YAAc,GAAZ,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;AACnC,KAAG,CAAH;AAAC;AACI;AACA;AAAQ,IADX,YAAF,CAAA,SAAA,CAAA,YAAc,GAAZ,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;AACnC,KAAG,CAAH;AAAC;AACI;AACM;AAAQ,IADjB,YAAF,CAAA,SAAA,CAAA,MAAQ,GAAN,YAAF;AAAE,QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;AAC7B,KAAG,CAAH;AAAC,IACD,OAAA,YAAC,CAAD;AAAC,CAAA,EAAD,CAAA,CAAC;AACD;AAAI;AAAkC;AAAkE;AAAI;AAAI;AAAW;AAAI;AAAI;AAAW;AAAI;AAAI;AAAW;AAAI;AAAI;AAAW;AAAI;AAAI;AAA6B;AAAoC;AAAsC;AAAe;ACvBlT,SAAA,mBAAA,CACE,cAAuB,EACvB,qBAA8B,EAC9B,uBAAgC,EAHlC;AAAE,IAIA,OAAO,CAAC,cAAc,IAAI,qBAAqB,KAAK,CAAC,uBAAuB,CAAC;AAC/E,CAAC;AACD;AAAI;AAAkC;AAAkE;AAAI;AAAI;AAAkB;AAAe;AC1BjJ,SAAA,cAAA,CAA+B,EAGX,EAHpB;AAAE,IACF,IAAE,aAAF,GAAA,EAAA,CAAA,aAAe,EACb,IADF,GAAA,EAAA,CAAA,IACM,CADN;AAAC,IAGC,OAAO,2BAA2B,CAChC,EAAE,IAAI,EADV,IACU,EAAE,QAAQ,EAAE,eAAe,CAAC,aAAa,CAAC,EAAE,EAClD,aAAa,CACd,CAAC;AACJ,CAAC;AACD;AACG;AAAuB;AACjB;AACG;AAFZ,SAAA,2BAAA,CACE,QAAQ,EACR,aAA2B,EAF7B;AAAE;AAAqB,IAIrB,IAAM,SAAS,GACb,QAAQ,CAAC,QAAQ,KAAK,aAAa,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;AACxE,UAAQ,aAAa;AACrB,UAAQ,aAAa,CAAC,aAAa,CAAC;AACpC,IAAE,OAAF,MAAA,CAAA,MAAA,CAAA,EAAA,EAAc,QAAQ,EAAtB,EAAwB,SAAS,EAAjC,SAAiC,EAAjC,CAAA,CAAoC;AACpC,CAAC;AACD;AACG;AAA4B;AAAe;AAA9C,SAAA,eAAA,CAAgC,aAA2B,EAA3D;AAAE;AAAqB,IACrB,IAAM,QAAQ,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,GAAW,EAAzD,EACI,OAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAD/D,EAC+D,CAC5D,CAAC;AACJ,IAAE,OAAO,QAAQ,CAAC;AAClB,CAAC;AACD;AACG;AAAgC;AAA4B;AAAe;AAA9E,SAAA,kBAAA,CAAmC,iBAA0B,EAAE,aAAa,EAA5E;AAAE,IACA,OAAO,iBAAiB,GAAG,aAAa,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC;AAC3E,CAAC;AACD;AACG;AAAsB;AAAuB;AAAe;AAA/D,SAAA,eAAA,CAAgC,OAAmB,EAAE,QAAmB,EAAxE;AAAE;AAAqB,IACrB,IAAM,MAAM,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AACnD,IAAE,OAAO,QAAQ,CAAC,QAAQ;AAC1B,UAAM,wBAAwB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;AACzD,UAAM,yBAAyB,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC3D,CAAC;AACD;AACG;AAAqB;AACpB;AACK;AACR;AAHD,SAAA,wBAAA,CACE,MAAc,EACd,OAAmB,EACnB,QAAmB,EAHrB;AAAE,IAKQ,IAAA,IAAV,GAAA,QAAA,CAAA,IAAc,EAAE,SAAhB,GAAA,QAAA,CAAA,SAAyB,EAAE,QAA3B,GAAA,QAAA,CAAA,QAAmC,CAAc;AACjD,IAAQ,IAAA,EAAR,GAAA,qBAAA,CAAA,IAAA,CAA0E,EAAhE,eAAV,GAAA,EAAA,CAAA,eAAyB,EAAE,eAA3B,GAAA,EAAA,CAAA,eAA0C,CAAiC;AAC3E;AAAqB,IACnB,IAAM,QAAQ,GACZ,MAAM;AACV,QAAI,qBAAqB,CACnB,kBAAkB,CAAC,QAAQ,EAAE,SAAS,CAAC,EACvC,IAAI,EACJ,QAAQ,CACT,CAAC;AACN;AAAqB,IACnB,IAAM,mBAAmB,GAAG,gBAAgB,CAC1C,OAAO,CAAC,aAAa,EACrB,QAAQ,EACR,eAAe,EACf,eAAe,CAChB,CAAC;AACJ;AAAqB,IAAnB,IAAM,aAAa,GACjB,mBAAmB,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC9D,QAAI,mBAAmB,CAAC;AACxB,IAAE,OAAO,EAAE,MAAM,EAAjB,MAAiB,EAAE,QAAQ,EAA3B,QAA2B,EAAE,aAAa,EAA1C,aAA0C,EAAE,CAAC;AAC7C,CAAC;AACD;AACG;AAAqB;AACrB;AACK;AACR;AAHA,SAAA,yBAAA,CACE,MAAc,EACd,OAAmB,EACnB,QAAmB,EAHrB;AAAE,IAKQ,IAAA,IAAV,GAAA,QAAA,CAAA,IAAc,EAAE,SAAhB,GAAA,QAAA,CAAA,SAAyB,CAAc;AACvC;AAAqB,IACnB,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AAClD;AAAqB,IAAnB,IAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAC1D,IAAE,OAAO,EAAE,MAAM,EAAjB,MAAiB,EAAE,QAAQ,EAA3B,QAA2B,EAAE,aAAa,EAA1C,aAA0C,EAAE,CAAC;AAC7C,CAAC;AACD;AACG;AAAmB;AAAe;AAArC,SAAA,qBAAA,CAAsC,IAAkB,EAAxD;AAAE,IACA,OAAO;AACT,QAAI,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE;AAC3C,QAAI,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE;AAC3C,KAAG,CAAC;AACJ,CAAC;AACD;AACG;AAAkB;AAAe;AAApC,SAAA,uBAAA,CAAwC,EAI5B,EAJZ;AAAE,IACF,IAAE,SAAF,GAAA,EAAA,CAAA,SAAW,EACT,QADF,GAAA,EAAA,CAAA,QACU,EACR,IAFF,GAAA,EAAA,CAAA,IAEM,CAFN;AAAC,IAIO,IAAA,EAAR,GAAA,qBAAA,CAAA,IAAA,CAA0E,EAAhE,eAAV,GAAA,EAAA,CAAA,eAAyB,EAAE,eAA3B,GAAA,EAAA,CAAA,eAA0C,CAAiC;AAC3E,IAAE,OAAO,gBAAgB,CACrB,SAAS,EACT,QAAQ,EACR,eAAe,EACf,eAAe,CAChB,CAAC;AACJ,CAAC;AACD;AAAI;AAAmB;AACX;AAEJ;AACG;AACX;AALA,SAAA,gBAAA,CACE,IAAS,EACT,QAAiB,EACjB,eAAuB,EACvB,eAAuB,EAJzB;AAAE,IAMA,IAAI,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE;AACpC;AAAyB,QAArB,IAAM,OAAO,GAAG,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACvD,QAAI,OAAO,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAClD,KAAG;AAAC,SAAK;AACT,QAAI,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC;AACjC,KAAG;AACH,CAAC;AACD;AACG;AAAmB;AAClB;AACC;AAAe;AAFpB,SAAA,mBAAA,CACE,IAAkB,EAClB,IAAkB,EAClB,QAAiB,EAHnB;AAAE;AAAqB,IAKrB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAC/B;AACE,IAAA,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACnC;AACI,QAAA,OAAO;AACX,KAAG;AACH,IAAE,QACE,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;AACxC,QAAI,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,EAC3C;AACJ,CAAC;AACD;AACG;AAAmB;AACpB;AACC;AAAe;AAFlB,SAAA,qBAAA,CACE,IAAkB,EAClB,IAAkB,EAClB,QAAiB,EAHnB;AAAE;AAAqB,IAKrB,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AAC5C;AAAqB,IAAnB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACxC;AAAqB,IAAnB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;AACxC,IACE,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE;AAClC,QAAI,OAAO,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC;AACzD,KAAG;AAAC,SAAK,IAAI,IAAI,CAAC,aAAa,EAAE;AACjC,QAAI,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AACvD,KAAG;AAAC,SAAK;AACT,QAAI,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3B,KAAG;AACH,CAAC;AACD;AAAI;AAAkC;AAAkE;AAAI;AAAI;AAAwB;AAAuB;AAA4B;AAAe;ACtJ1M,SAAA,qBAAA,CACE,SAAyB,EACzB,QAA2B,EAC3B,aAAsB,EAHxB;AAAE;AAAqB,IAKrB,IAAI,SAAS,CAAS;AACxB;AAAqB,IAAnB,IAAI,mBAAmB,CAAS;AAClC,IAAE,IAAI,SAAS,CAAC,aAAa,IAAI,CAAC,EAAE;AACpC,QAAI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAAqB,IAAnB,IAAM,gBAAgB,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC;AACjE,IAAE,IAAI,aAAa,EAAE;AACrB,QAAI,SAAS;AACb,YAAM,CAAC,SAAS,CAAC,aAAa,GAAG,gBAAgB,IAAI,SAAS,CAAC,aAAa,CAAC;AAC7E,QAAI,mBAAmB,GAAG,QAAQ,CAAC,IAAI,GAAG,EAAE,CAAC;AAC7C,KAAG;AAAC,SAAK;AACT;AAAyB,QAArB,IAAM,wBAAwB,GAC5B,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,aAAa,GAAG,gBAAgB,CAAC,CAAC;AACxE,QAAI,SAAS,GAAG,SAAS,CAAC,QAAQ,GAAG,wBAAwB,CAAC;AAC9D,QAAI,mBAAmB,GAAG,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;AAC3C,KAAG;AACH;AACoB,IAAlB,IAAM,eAAe,GAAY,SAAS,IAAI,mBAAmB,CAAC;AACpE,IAAE,OAAO,eAAe,CAAC;AACzB,CAAC;AACD;AACG;AAAiC;AACd;AACf;AAFP,SAAA,oBAAA,CACE,kBAA0B,EAC1B,SAAyB,EAF3B;AAAE,IAIA,OAAO,kBAAkB,GAAG,SAAS,CAAC,QAAQ,CAAC;AACjD,CAAC;AACD;AACG;AACC;AAAwB;AACP;AACd;AAHP,SAAA,cAAA,CACE,kBAA0B,EAC1B,SAAyB,EACzB,QAA2B,EAH7B;AAAE;AAAqB,IAKrB,IAAM,UAAU,GAAG,oBAAoB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;AACzE,IAAE,OAAO;AACT,QAAI,IAAI,EAAE,qBAAqB,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;AAChE,QAAI,UAAU,EAAd,UAAc;AACd,KAAG,CAAC;AACJ,CAAC;AACD;AACG;AAAuB;AACZ;AACL;AAFT,SAAA,oBAAA,CACE,QAAgB,EAChB,WAAyB,EAF3B;AAAE,IAIA,QAAQ,WAAW,CAAC,kBAAkB,GAAG,QAAQ,EAAE;AACrD,CAAC;AACD;AACG;AAA4B;AACX;AACV;AAFV,SAAA,mBAAA,CACE,aAAqB,EACrB,WAAyB,EAF3B;AAAE,IAIA,IAAI,WAAW,CAAC,iBAAiB,KAAK,aAAa,EAAE;AACvD,QAAI,WAAW,CAAC,iBAAiB,GAAG,WAAW,CAAC,aAAa,CAAC;AAC9D,QAAI,WAAW,CAAC,aAAa,GAAG,aAAa,CAAC;AAC9C,KAAG;AACH,CAAC;AACD;AACG;AAA0B;AAAe;AAAI;AAAI;AAC5C;AAA0B;AAAwB;AAG3C;AAAe;AAA9B,SAAA,mBAAA,CACE,MAAM,EACN,WAAyB,EACzB,SAAkB,EAClB,eAAwB,EAJ1B;AAAE,IAMA,IAAI,eAAe,EAAE;AACvB,QAAI,WAAW,CAAC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC;AACxC,KAAG;AAAC,SAAK;AACT,QAAI,WAAW,CAAC,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;AACtC,KAAG;AACH,CAAC;AACD;AACG;AAA4B;AAE1B;AACC;AAAe;AAHrB,SAAA,iBAAA,CACE,aAAa,EACb,WAAyB,EACzB,eAAwB,EAH1B;AAAE,IAKA,OAAO,eAAe;AACxB,UAAM,WAAW,CAAC,SAAS,CAAC,IAAI,KAAK,aAAa;AAClD,UAAM,WAAW,CAAC,SAAS,CAAC,EAAE,KAAK,aAAa,CAAC;AACjD,CAAC;AACD;AACG;AAA0B;AACJ;AACD;AACb;AAHX,SAAA,iBAAA,CACE,WAAyB,EACzB,gBAAwB,EACxB,aAAqB,EAHvB;AAAE,IAKA,oBAAoB,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;AACtD,IAAE,mBAAmB,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAClD;AACE;AACE;AACE;AAEA,CADL;AACD;AAAI;AAAkC;AAAkE;AAAI;AAAI;AAAW;AAAI;AAAI;AAAqB;AAAe;ACjFvK,SAAA,cAAA,CAA+B,MAAwB,EAAvD;AAAE,IACQ,IAAA,eAAV,GAAA,MAAA,CAAA,eAAyB,EAAE,YAA3B,GAAA,MAAA,CAAA,YAAuC,EAAE,OAAzC,GAAA,MAAA,CAAA,OAAgD,EAAE,QAAlD,GAAA,MAAA,CAAA,QAA0D,CAAY;AACtE;AAAqB,IAAnB,IAAM,QAAQ,GAAG,cAAc,CAAC;AAClC,QAAI,IAAI,EAAE,IAAI,YAAY,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC;AAC9C,QAAI,aAAa,EAAE,uBAAuB,CACpC,eAAe,EACf,YAAY,EACZ,OAAO,EACP,QAAQ,CACT;AACL,KAAG,CAAC,CAAC;AACL,IAAU,IAAA,cAAV,GAAA,eAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA,aAAuC,CAAwC;AAC/E;AAAqB,IAAnB,IAAM,WAAW,GAAwB;AAC3C,QAAI,kBAAkB,EAAE,CAAC;AACzB,QAAI,iBAAiB,EAAE,CAAC;AACxB,QAAI,aAAa,EAAE,cAAc;AACjC,QAAI,SAAS,EAAE;AACf,YAAM,IAAI,EAAE,CAAC;AACb,YAAM,EAAE,EAAE,CAAC;AACX,SAAK;AACL,KAAG,CAAC;AACJ;AAAqB,IAAnB,IAAM,OAAO,GAAiC;AAChD,QAAI,SAAS,EAAE,QAAQ,CAAC,SAAS;AACjC,QAAI,QAAQ,EAAE,MAAM,CAAC,QAAQ;AAC7B,KAAG,CAAC;AACJ;AACA,IADE,IAAM,QAAQ,GAAG;AACnB,QAAI,EAAE,EAAE,MAAM,CAAC,UAAU;AACzB,QAAI,IAAI,EAAE,MAAM,CAAC,YAAY;AAC7B,KAAG,CAAC;AACJ,IAAE,OAAO,iBAAiB,CAAC,OAAO,CAAC,CAAC,IAAI,CACpCA,kBAAG,CAAC,UAAC,EAAmC,EAD5C;AAAE,QACF,IAAW,MAAX,GAAA,EAAA,CAAA,MAAiB,CAAjB;AAAC,QADD,QACkD;AAClD,YAAM,aAAa,EAAE,MAAM,CAAC,YAAY;AACxC,YAAM,eAAe,EAAE,MAAM,CAAC,SAAS;AACvC,YAAM,cAAc,EAAE,MAAM,CAAC,YAAY;AACzC,SAAK,EAAL;AAAC,KAAK,CAAC,EACHC,uBAAQ,EAAE,EACVC,kBAAG,CAAC,UAAA,EAAE,EAPV,EAOc,OAAA,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAP7B,EAO6B,CAAC,EAC1BC,uBAAQ,CAAC,UAAC,EAAO,EARrB,EAQ0B,OAAAC,OAAE,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CARhE,EAQgE,CAAC,EAC7DJ,kBAAG,CAAC,UAAC,aAAoC,EAT7C,EAUM,OAAA,sBAAsB,CACpB,WAAW,CAAC,kBAAkB,EAC9B,aAAa,EACb,QAAQ,CACT,CAdP,EAcO,CACF,EACDE,kBAAG,CAAC,UAAC,EAA2C,EAhBpD;AAAE,QAgBF,IAAW,KAAX,GAAA,EAAA,CAAA,KAAgB,EAAE,UAAlB,GAAA,EAAA,CAAA,UAA4B,CAA5B;AAAC,QACKG,OAAAA,iBAAgC,CAC9B,WAAW,EACX,KAAK,CAAC,QAAQ,EACd,KAAK,CAAC,aAAa,CACpB,CAJPA;AAACA,KAIM,CACF,EACDC,qBAAM,CACJ,UAAC,EAAoE,EAP3ED;AAAEA,QAOF,IAAS,IAAT,GAAA,EAAA,CAAA,IAAa,EAAE,UAAf,GAAA,EAAA,CAAA,UAAyB,EAAW,aAApC,GAAA,EAAA,CAAA,KAAA,CAAA,aAAiD,CAAjD;AAAC,QACO,OAAA,mBAAmB,CACjB,MAAM,CAAC,cAAc,EACrB,IAAI,EACJE,iBAAgC,CAC9B,aAAa,EACb,WAAW,EACX,UAAU,CACX,CACF,CART;AAAC,KAQQ,CACJ,EACDL,kBAAG,CAAC,UAAC,EAA8D,EAVvE;AAAE,QAUF,IAAW,UAAX,GAAA,EAAA,CAAA,UAAqB,EAAW,aAAhC,GAAA,EAAA,CAAA,KAAA,CAAA,aAA6C,CAA7C;AAAC,QACKM,mBAAkC,CAChC,aAAa,EACb,WAAW,EACX,IAAI,EACJ,UAAU,CACX,CAAC;AACR,KAAK,CAAC,EACFR,kBAAG,CAAC,sBAAsB,CAAC,CAC5B,CAAC;AACJ,CAAC;AACD;AACG;AAAsB;AACpB;AADL,SAAA,iBAAA,CACE,OAAqC,EADvC;AAAE;AAAqB,IAGrB,IAAI,GAAG,GAAGS,cAAS,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACnD;AACE;AACE;AACE,IAAJ,IAAI,OAAO,CAAC,QAAQ,EAAE;AACxB,QAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAACC,yBAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjD,KAAG;AACH,IAAE,OAAO,GAAG,CAAC;AACb,CAAC;AACD;AACG;AAAiC;AACpB;AACP;AAAe;AAFxB,SAAA,sBAAA,CACE,kBAA0B,EAC1B,KAA4B,EAC5B,QAAkC,EAHpC;AAAE,IAKM,IAAA,EAAR,GAAA,cAAA,CAAA,kBAAA,EAAA,KAAA,EAAA,QAAA,CAIG,EAJO,UAAV,GAAA,EAAA,CAAA,UAAoB,EAAE,IAAtB,GAAA,EAAA,CAAA,IAA0B,CAItB;AACJ,IAAE,OAAO;AACT,QAAI,UAAU,EAAd,UAAc;AACd,QAAI,IAAI,EAAR,IAAQ;AACR,QAAI,KAAK,EAAT,KAAS;AACT,KAAG,CAAC;AACJ,CAAC;AACD;AACA,IAAa,qBAAqB,GAAG;AACrC,IAAE,IAAI,EAAE,gBAAgB;AACxB,IAAE,EAAE,EAAE,cAAc;AACpB,CAAC,CAAC;AACF;AACG;AAAuB;AACzB;AADD,SAAA,sBAAA,CACE,QAA8B,EADhC;AAAE,IAIE,IAAA,UAAJ,GAAA,QAAA,CAAA,UAAc,EACD,qBADb,GAAA,QAAA,CAAA,KAAA,CAAA,QAC4C,CAC7B;AACf,IAAE,OAAO;AACT,QAAI,IAAI,EAAE,UAAU,GAAG,qBAAqB,CAAC,IAAI,GAAG,qBAAqB,CAAC,EAAE;AAC5E,QAAI,OAAO,EAAE;AACb,YAAM,qBAAqB,EAA3B,qBAA2B;AAC3B,SAAK;AACL,KAAG,CAAC;AACJ,CAAC;AACD;AAAI;AAAkC;AAAkE;ACnJxG,IAAA,uBAAA,kBAAA,YAAA;AAAE;AACD;AACS;AAEJ;AAAQ,IAmCZ,SAAF,uBAAA,CAAsB,OAAmB,EAAU,IAAY,EAA/D;AAAE,QAAoB,IAAtB,CAAA,OAA6B,GAAP,OAAO,CAAY;AAAC,QAAS,IAAnD,CAAA,IAAuD,GAAJ,IAAI,CAAQ;AAAC,QAhBhE,IAAA,CAAA,QAAA,GAAuB,IAAIC,0BAAY,EAAuB,CAA9D;AAAC,QACD,IAAA,CAAA,UAAA,GAAyB,IAAIA,0BAAY,EAAuB,CAAhE;AAAC,QAED,IAAA,CAAA,sBAAA,GAA4C,CAAC,CAA7C;AAAC,QACD,IAAA,CAAA,wBAAA,GAA8C,GAAG,CAAjD;AAAC,QACD,IAAA,CAAA,sBAAA,GAA4C,GAAG,CAA/C;AAAC,QACD,IAAA,CAAA,sBAAA,GAA6C,KAAK,CAAlD;AAAC,QACD,IAAA,CAAA,uBAAA,GAA0C,IAAI,CAA9C;AAAC,QACD,IAAA,CAAA,YAAA,GAAmC,IAAI,CAAvC;AAAC,QACD,IAAA,CAAA,cAAA,GAAqC,KAAK,CAA1C;AAAC,QACD,IAAA,CAAA,UAAA,GAAiC,KAAK,CAAtC;AAAC,QACD,IAAA,CAAA,cAAA,GAAqC,KAAK,CAA1C;AAAC,QACD,IAAA,CAAA,QAAA,GAA+B,KAAK,CAApC;AAAC,KAImE;AACpE;AACO;AACH;AAAQ,IADV,uBAAF,CAAA,SAAA,CAAA,eAAiB,GAAf,YAAF;AAAE,QACE,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;AACtC,YAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,SAAK;AACL,KAAG,CAAH;AAAC;AAEG;AAAsB;AAAmB;AAAQ,IAAnD,uBAAF,CAAA,SAAA,CAAA,WAAa,GAAX,UAAY,EAA0F,EAAxG;AAAE,QAAF,IAAgB,uBAAhB,GAAA,EAAA,CAAA,uBAAuC,EAAE,sBAAzC,GAAA,EAAA,CAAA,sBAA+D,EAAE,sBAAjE,GAAA,EAAA,CAAA,sBAAuF,CAAvF;AAAC;AAAyB,QACtB,IAAM,gBAAgB,GAAG,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;AACvE;AAAyB,QAArB,IAAM,eAAe,GAAG,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;AACrE;AAAyB,QAArB,IAAM,eAAe,GAAG,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;AACrE;AAAyB,QAArB,IAAM,WAAW,GAAG,CAAC,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,sBAAsB;AACzE,aAAO,eAAe,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,IAAI,eAAe,CAAC;AACnF,QACI,IAAI,gBAAgB,IAAI,eAAe,IAAI,eAAe,EAAE;AAChE,YAAM,IAAI,CAAC,eAAe,EAAE,CAAC;AAC7B,YAAM,IAAI,WAAW,EAAE;AACvB,gBAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,aAAO;AACP,SAAK;AACL,KAAG,CAAH;AAAC;AAEG;AACO;AAAQ,IADjB,uBAAF,CAAA,SAAA,CAAA,KAAO,GAAL,YAAF;AAAE,QAAA,IAAF,KAAA,GAAA,IAAA,CAiBG;AACH,QAjBI,IAAI,gBAAgB,EAAE,EAAE;AAC5B,YAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAlC;AAAE,gBACM,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AAC9C,oBAAU,QAAQ,EAAE,KAAI,CAAC,QAAQ;AACjC,oBAAU,cAAc,EAAE,KAAI,CAAC,cAAc;AAC7C,oBAAU,OAAO,EAAE,KAAI,CAAC,sBAAsB;AAC9C,oBAAU,YAAY,EAAE,KAAI,CAAC,sBAAsB;AACnD,oBAAU,OAAO,EAAE,KAAI,CAAC,OAAO;AAC/B,oBAAU,UAAU,EAAE,KAAI,CAAC,UAAU;AACrC,oBAAU,eAAe,EAAE,KAAI,CAAC,uBAAuB;AACvD,oBAAU,YAAY,EAAE,KAAI,CAAC,YAAY;AACzC,oBAAU,QAAQ,EAAE,KAAI,CAAC,sBAAsB;AAC/C,oBAAU,UAAU,EAAE,KAAI,CAAC,wBAAwB;AACnD,iBAAS,CAAC,CAAC,SAAS,CAAC,UAAC,OAAY,EAAlC,EAAuC,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAArD,EAA2D,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAvF,EAAuF,CAAC,CAAxF,EAAwF,CAAC,CAAC;AAC1F,aAAO,CAAC,CAAC;AACT,SAAK;AACL,KAAG,CAAH;AAAC;AAEG;AAAsB;AAAmB;AAAQ,IAAnD,uBAAF,CAAA,SAAA,CAAA,cAAgB,GAAd,UAAe,EAAwC,EAAzD;AAAE,QAAF,IAAmB,IAAnB,GAAA,EAAA,CAAA,IAAuB,EAAE,OAAzB,GAAA,EAAA,CAAA,OAAgC,CAAhC;AAAC,QACG,QAAQ,IAAI;AAChB,YAAM,KAAK,qBAAqB,CAAC,IAAI;AACrC,gBAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3C,YACM,KAAK,qBAAqB,CAAC,EAAE;AACnC,gBAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7C,YACM;AACN,gBAAQ,OAAO;AACf,SAAK;AACL,KAAG,CAAH;AAAC;AAEG;AACC;AAAQ,IADX,uBAAF,CAAA,SAAA,CAAA,WAAa,GAAX,YAAF;AAAE,QACE,IAAI,CAAC,eAAe,EAAE,CAAC;AAC3B,KAAG,CAAH;AAAC;AAEG;AACH;AAAQ,IADP,uBAAF,CAAA,SAAA,CAAA,eAAiB,GAAf,YAAF;AAAE,QACE,IAAI,IAAI,CAAC,eAAe,EAAE;AAC9B,YAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;AACzC,SAAK;AACL,KAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAH;AAAC;AAE8B,CAxG/B,EAAA,CAAA,CAAA,AAqBC;AAAC;wBAHF,EAAA,IAAA,EAACC,uBAAS,EAAV,IAAA,EAAA,/DAGqB;AAHV,kBACT,QAAQ,EAAE,5BAGoC,IAnBhD,EAAA,IAAA,EAAEC,wBAAU,EAAZ;AAAE,IAGF,EAAA,IAAA,EAAEC,oBAAM,EAAR;AAAC;QAawE,cACxE,EAAD,EAAA,1BAdO;AAIH,IAaJ,QAAA,EAAA,CAAA,EAAA,IAAA,EAAGC,oBAAM,EAAT,CAAA;AAAE,IACF,UAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,oBAAM,EAAT,CAAA;AAAE,IAEF,sBAAA,EAAA,CAAA,EAAA,IAAA,EAAGC,mBAAK,EAAR,CAAA;AAAE,IACF,wBAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,sBAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,sBAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,uBAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,YAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,cAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,UAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,cAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAE,IACF,QAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,mBAAK,EAAR,CAAA;AAAC;AAAG;AAAI;AAEL;AAEwB;ACvC3B,IAAA,oBAAA,kBAAA,YAAA;AAAE,IAAF,SAAA,oBAAA,GAAA;AAAE;;;;;;;;;;;;gDAAK;AAAC;AAAiC,CAAzC,EAAA,CAAA,CAAA,AAUC;AAAC;uCANF,EAAA,IAAA,EAACC,/CAME;UANM,EAAT,IAAA,EAAA,CAAU,kBACR,YAAY,EAAE,CAAC,pDAMO;AAAqD;qBANrC,CAAC,kBACvC,OAAO,EAAE,CAAC,lDAKkE;AAA+D;AAAC;GAL3G,CAAC,kBAClC,OAAO,EAAE,EAAE,kBACX,SAAS,EAAE,EAAE,cACd,EAAD,EAAA,lFAEoJ","sourcesContent":["import { ElementRef, SimpleChange } from '@angular/core';\n\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const hasWindow = window && !!window.document && window.document.documentElement;\n  let container = hasWindow && scrollWindow ? window : defaultElement;\n  if (selector) {\n    const containerIsString =\n      selector && hasWindow && typeof selector === 'string';\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n    if (!container) {\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n    }\n  }\n  return container;\n}\n\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n","const VerticalProps = {\n  clientHeight: \"clientHeight\",\n  offsetHeight: \"offsetHeight\",\n  scrollHeight: \"scrollHeight\",\n  pageYOffset: \"pageYOffset\",\n  offsetTop: \"offsetTop\",\n  scrollTop: \"scrollTop\",\n  top: \"top\"\n};\n\nconst HorizontalProps = {\n  clientHeight: \"clientWidth\",\n  offsetHeight: \"offsetWidth\",\n  scrollHeight: \"scrollWidth\",\n  pageYOffset: \"pageXOffset\",\n  offsetTop: \"offsetLeft\",\n  scrollTop: \"scrollLeft\",\n  top: \"left\"\n};\n\nexport class AxisResolver {\n  private propsMap: any;\n\n  constructor(private vertical: boolean = true) {\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\n  }\n  clientHeightKey() {\n    return this.propsMap.clientHeight;\n  }\n  offsetHeightKey() {\n    return this.propsMap.offsetHeight;\n  }\n  scrollHeightKey() {\n    return this.propsMap.scrollHeight;\n  }\n  pageYOffsetKey() {\n    return this.propsMap.pageYOffset;\n  }\n  offsetTopKey() {\n    return this.propsMap.offsetTop;\n  }\n  scrollTopKey() {\n    return this.propsMap.scrollTop;\n  }\n  topKey() {\n    return this.propsMap.top;\n  }\n}\n","import { InfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps {\n  container: IPositionStats;\n  down: number;\n  up: number;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  shouldFireScrollEvent: boolean;\n}\n\nexport function shouldTriggerEvents(\n  alwaysCallback: boolean,\n  shouldFireScrollEvent: boolean,\n  isTriggeredCurrentTotal: boolean) {\n  return (alwaysCallback || shouldFireScrollEvent) && !isTriggeredCurrentTotal;\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n\nexport function createResolver({\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    { axis, isWindow: isElementWindow(windowElement) },\n    windowElement\n  );\n}\n\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const scrolled =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolled, totalToScroll };\n}\n\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const scrolled = container[axis.scrollTopKey()];\n  const totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolled, totalToScroll };\n}\n\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    const docElem = getDocumentElement(isWindow, elem);\n    return docElem ? docElem[clientHeightKey] : 0;\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const pageYOffset = axis.pageYOffsetKey();\n  const scrollTop = axis.scrollTopKey();\n  const offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window[pageYOffset])) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../models';\n\nexport function shouldFireScrollEvent(\n  container: IPositionStats,\n  distance: IScrollerDistance,\n  scrollingDown: boolean\n) {\n  let remaining: number;\n  let containerBreakpoint: number;\n  if (container.totalToScroll <= 0) {\n    return false;\n  }\n  const scrolledUntilNow = container.height + container.scrolled;\n  if (scrollingDown) {\n    remaining =\n      (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n    containerBreakpoint = distance.down / 10;\n  } else {\n    const totalHiddenContentHeight =\n      container.scrolled + (container.totalToScroll - scrolledUntilNow);\n    remaining = container.scrolled / totalHiddenContentHeight;\n    containerBreakpoint = distance.up / 10;\n  }\n\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\n  return shouldFireEvent;\n}\n\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolled;\n}\n\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  distance: IScrollerDistance\n) {\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\n    scrollDown\n  };\n}\n\nexport function updateScrollPosition(\n  position: number,\n  scrollState: IScrollState\n) {\n  return (scrollState.lastScrollPosition = position);\n}\n\nexport function updateTotalToScroll(\n  totalToScroll: number,\n  scrollState: IScrollState\n) {\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\n    scrollState.totalToScroll = totalToScroll;\n  }\n}\n\nexport function isSameTotalToScroll(scrollState: IScrollState) {\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\n}\n\nexport function updateTriggeredFlag(\n  scroll,\n  scrollState: IScrollState,\n  triggered: boolean,\n  isScrollingDown: boolean\n) {\n  if (isScrollingDown) {\n    scrollState.triggered.down = scroll;\n  } else {\n    scrollState.triggered.up = scroll;\n  }\n}\n\nexport function isTriggeredScroll(\n  totalToScroll,\n  scrollState: IScrollState,\n  isScrollingDown: boolean\n) {\n  return isScrollingDown\n    ? scrollState.triggered.down === totalToScroll\n    : scrollState.triggered.up === totalToScroll;\n}\n\nexport function updateScrollState(\n  scrollState: IScrollState,\n  scrolledUntilNow: number,\n  totalToScroll: number\n) {\n  updateScrollPosition(scrolledUntilNow, scrollState);\n  updateTotalToScroll(totalToScroll, scrollState);\n  // const isSameTotal = isSameTotalToScroll(scrollState);\n  // if (!isSameTotal) {\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\n  // }\n}\n","import { Observable, of, fromEvent } from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  tap,\n  sampleTime,\n  filter,\n  pairwise\n} from 'rxjs/operators';\n\nimport * as Models from '../models';\nimport { AxisResolver } from './axis-resolver';\nimport { shouldTriggerEvents, IScrollConfig } from './event-trigger';\nimport { resolveContainerElement } from './ngx-ins-utils';\nimport { calculatePoints, createResolver } from './position-resolver';\nimport * as ScrollResolver from './scroll-resolver';\n\nexport interface IScrollEvent {\n  contentHeight: number;\n  scrolledFromTop: number;\n  viewportHeight: number;\n}\nexport function createScroller(config: Models.IScroller) {\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\n  const resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    windowElement: resolveContainerElement(\n      scrollContainer,\n      scrollWindow,\n      element,\n      fromRoot\n    )\n  });\n  const { totalToScroll: startWithTotal } = calculatePoints(element, resolver);\n  const scrollState: Models.IScrollState = {\n    lastScrollPosition: 0,\n    lastTotalToScroll: 0,\n    totalToScroll: startWithTotal,\n    triggered: {\n      down: 0,\n      up: 0\n    }\n  };\n  const options: Models.IScrollRegisterConfig = {\n    container: resolver.container,\n    throttle: config.throttle\n  };\n  const distance = {\n    up: config.upDistance,\n    down: config.downDistance\n  };\n  return attachScrollEvent(options).pipe(\n    map(({ target }: { target: HTMLElement }) => ({\n      contentHeight: target.scrollHeight,\n      scrolledFromTop: target.scrollTop,\n      viewportHeight: target.clientHeight\n    })),\n    pairwise(),\n    tap(ev => console.log(ev)),\n    mergeMap((ev: any) => of(calculatePoints(element, resolver))),\n    map((positionStats: Models.IPositionStats) =>\n      toInfiniteScrollParams(\n        scrollState.lastScrollPosition,\n        positionStats,\n        distance\n      )\n    ),\n    tap(({ stats, scrollDown }: Models.IScrollParams) =>\n      ScrollResolver.updateScrollState(\n        scrollState,\n        stats.scrolled,\n        stats.totalToScroll\n      )\n    ),\n    filter(\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\n        shouldTriggerEvents(\n          config.alwaysCallback,\n          fire,\n          ScrollResolver.isTriggeredScroll(\n            totalToScroll,\n            scrollState,\n            scrollDown\n          )\n        )\n    ),\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\n      ScrollResolver.updateTriggeredFlag(\n        totalToScroll,\n        scrollState,\n        true,\n        scrollDown\n      );\n    }),\n    map(toInfiniteScrollAction)\n  );\n}\n\nexport function attachScrollEvent(\n  options: Models.IScrollRegisterConfig\n): Observable<{}> {\n  let obs = fromEvent(options.container, 'scroll');\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n  // Let's avoid calling the function unless needed.\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n  if (options.throttle) {\n    obs = obs.pipe(sampleTime(options.throttle));\n  }\n  return obs;\n}\n\nexport function toInfiniteScrollParams(\n  lastScrollPosition: number,\n  stats: Models.IPositionStats,\n  distance: Models.IScrollerDistance\n): Models.IScrollParams {\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\n    lastScrollPosition,\n    stats,\n    distance\n  );\n  return {\n    scrollDown,\n    fire,\n    stats\n  };\n}\n\nexport const InfiniteScrollActions = {\n  DOWN: '[NGX_ISE] DOWN',\n  UP: '[NGX_ISE] UP'\n};\n\nexport function toInfiniteScrollAction(\n  response: Models.IScrollParams\n): Models.IInfiniteScrollAction {\n  const {\n    scrollDown,\n    stats: { scrolled: currentScrollPosition }\n  } = response;\n  return {\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n    payload: {\n      currentScrollPosition\n    }\n  };\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport { InfiniteScrollEvent, IInfiniteScrollAction } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller, InfiniteScrollActions } from '../services/scroll-register';\n\n@Directive({\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n})\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n  @Output() scrolled = new EventEmitter<InfiniteScrollEvent>();\n  @Output() scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n  @Input() infiniteScrollDistance: number = 2;\n  @Input() infiniteScrollUpDistance: number = 1.5;\n  @Input() infiniteScrollThrottle: number = 150;\n  @Input() infiniteScrollDisabled: boolean = false;\n  @Input() infiniteScrollContainer: any = null;\n  @Input() scrollWindow: boolean = true;\n  @Input() immediateCheck: boolean = false;\n  @Input() horizontal: boolean = false;\n  @Input() alwaysCallback: boolean = false;\n  @Input() fromRoot: boolean = false;\n\n  private disposeScroller: Subscription;\n\n  constructor(private element: ElementRef, private zone: NgZone) { }\n\n  ngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n\n  ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n\n  setup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        }).subscribe((payload: any) => this.zone.run(() => this.handleOnScroll(payload)));\n      });\n    }\n  }\n\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\n    switch (type) {\n      case InfiniteScrollActions.DOWN:\n        return this.scrolled.emit(payload);\n\n      case InfiniteScrollActions.UP:\n        return this.scrolledUp.emit(payload);\n\n      default:\n        return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyScroller();\n  }\n\n  destroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n})\nexport class InfiniteScrollModule { }\n"]}